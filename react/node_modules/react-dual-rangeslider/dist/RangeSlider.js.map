{"version":3,"sources":["../src/RangeSlider.js"],"names":["window","require","RangeSlider","props","state","min","max","minElement","maxElement","minRange","minValue","maxValue","value","setState","ret","style","className","format","position","boxSizing","width","paddingLeft","paddingRight","top","marginLeft","height","backgroundColor","ev","target","parseInt","onChange","el","step","Component","defaultProps"],"mappings":"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","file":"RangeSlider.js","sourcesContent":["import React from 'react';\nimport numeral from 'numeral';\n\n\nif(typeof window !== 'undefined') {\n    require('./rangeslider.css');\n    require('./atomic.css');\n}\n\nclass RangeSlider extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            min: props.min,\n            max: props.max,\n            minElement: null,\n            maxElement: null,\n            minRange: props.minRange || 500\n        };\n    }\n    componentDidMount() {\n        var min = this.props.minValue || this.props.min;\n        var max = this.props.maxValue || this.props.max;\n        this.state.minElement.value = min;\n        this.state.maxElement.value = max;\n        this.setState({min: min, max: max});\n    }\n    componentWillReceiveProps(props) {\n        var min = this.props.minValue || this.props.min;\n        var max = this.props.maxValue || this.props.max;\n        this.state.minElement.value = min;\n        this.state.maxElement.value = max;\n        this.setState({min: min, max: max});\n    }\n    render() {\n        var ret = (\n            <div style={this.props.style} className={this.props.className + ' W(100%)'}>\n\t\t\t\t<div>foo</div>\n                <div className=\"D(ib) C(#4e5b65)\">\n                    {numeral(this.state.min).format('$0,0')}\n                </div>\n                <div className=\"D(ib) Fl(end) C(#4e5b65)\">\n                        {numeral(this.state.max).format('$0,0')}{(this.props.max === this.state.max) ? '+' : ''}\n                </div>\n                <div\n                    style={this.props.style}\n                    className={this.props.className + ' range-slider Pos(r) Ta(c) H(35px)'}>\n                    <div style={{\n                            position: 'absolute',\n                            boxSizing: 'border-box',\n                            width: '100%',\n                            paddingLeft: '8px',\n                            paddingRight: '8px',\n                            top: '7px'\n                        }}>\n                        <div style={{\n                            marginLeft: (this.state.min - this.props.min)/(this.props.max - this.props.min)*100 + '%',\n                            width: (100-(this.state.min - this.props.min + this.props.max - this.state.max)/(this.props.max - this.props.min)*100) + '%', \n                            height: '4px',\n                            backgroundColor: '#5FCCC7'\n                        }}></div>\n                    </div>\n                    <input\n                        onChange={\n                            (ev)=>{\n                                if(ev.target.value < this.state.max - this.state.minRange) {\n                                    this.setState(\n                                        {min: parseInt(ev.target.value)},\n                                        function() {\n                                            this.props.onChange(this.state);\n                                        }\n                                    );\n                                }\n                                else {\n                                    this.state.minElement.value = this.state.min;\n                                    this.setState(\n                                        {min: parseInt(this.state.min)},\n                                        function() {\n                                            this.props.onChange(this.state);\n                                        }\n                                    );\n                                }\n                            }\n                        }\n                        ref={(el)=>{this.state.minElement = el}}\n                        min={this.props.min}\n                        max={this.props.max}\n                        step={this.props.step}\n                        type=\"range\"\n                    />\n                    <input\n                        onChange={\n                            (ev)=>{\n                                if(ev.target.value > this.state.min + this.state.minRange) {\n                                    this.setState(\n                                        {max: parseInt(ev.target.value)},\n                                        function() {\n                                            this.props.onChange(this.state);\n                                        }\n                                    );\n                                }\n                                else {\n                                    this.state.maxElement.value = this.state.max;\n                                    this.setState(\n                                        {max: parseInt(this.state.max)},\n                                        function() {\n                                            this.props.onChange(this.state);\n                                        }\n                                    );\n                                }\n                            }\n                        }\n                        ref={(el)=>{this.state.maxElement = el}}\n                        min={this.props.min}\n                        max={this.props.max}\n                        step={this.props.step}\n                        type=\"range\"\n                    />\n                </div>\n            </div>\n        );\n        return ret;\n    }\n}\n\nRangeSlider.defaultProps = {className: ''}\n\nexport default RangeSlider;\n"]}