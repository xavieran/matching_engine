{"ast":null,"code":"import _classCallCheck from \"/html/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/html/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/html/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/html/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/html/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/html/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/html/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport ExchangeInterface from './exchange_interface.js';\nimport TraderInterface from './trader_interface.jsx';\nimport Login from './login_page.js';\nimport './index.css';\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {\n      exchange_host: \"ws://le-chateaud:6789/\",\n      orderbook: {\n        bid: [],\n        ask: []\n      },\n      orders: [],\n      trades: [],\n      pnl: {}\n    };\n    _this.exchange_interface = new ExchangeInterface(_this.onopen.bind(_assertThisInitialized(_assertThisInitialized(_this))), _this.onclose.bind(_assertThisInitialized(_assertThisInitialized(_this))), _this.exchange_event.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n\n    _this.connect();\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"exchange_event\",\n    value: function exchange_event() {\n      console.log(\"Updating state\", this.exchange_interface);\n      this.setState({\n        exchange_host: this.exchange_host,\n        orderbook: this.exchange_interface.orderbook,\n        trades: this.exchange_interface.trades,\n        orders: this.exchange_interface.orders,\n        pnl: this.exchange_interface.pnl\n      });\n    }\n  }, {\n    key: \"onopen\",\n    value: function onopen(event) {\n      console.log(\"Received onopen\", event);\n    }\n  }, {\n    key: \"onclose\",\n    value: function onclose(event) {\n      console.log(\"Received onclose\", event);\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      console.log(\"About to connect\");\n      this.exchange_interface.connect(this.state.exchange_host);\n      this.exchange_interface.send({\n        type: \"login\",\n        trader_id: \"aj\"\n      });\n    }\n  }, {\n    key: \"send_order\",\n    value: function send_order(side, price, volume) {\n      this.exchange_interface.send_order(side, price, volume, \"aj\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-trader-interface\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(TraderInterface, {\n        trade: this.send_order.bind(this),\n        orders: this.state.orders,\n        trades: this.state.trades,\n        orderbook: this.state.orderbook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nvar routing = React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/TraderInterface\",\n  component: Main,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n})));\nReactDOM.render(routing, document.getElementById('root'));","map":{"version":3,"sources":["/html/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","ExchangeInterface","TraderInterface","Login","Main","props","state","exchange_host","orderbook","bid","ask","orders","trades","pnl","exchange_interface","onopen","bind","onclose","exchange_event","connect","console","log","setState","event","send","type","trader_id","side","price","volume","send_order","Component","routing","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport ExchangeInterface from './exchange_interface.js';\nimport TraderInterface from './trader_interface.jsx';\nimport Login from './login_page.js';\nimport './index.css';\n\nclass Main extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            exchange_host: \"ws://le-chateaud:6789/\",\n            orderbook: {\n                bid: [],\n                ask: []\n            },\n            orders: [],\n            trades: [],\n            pnl: {}\n        }\n\n        this.exchange_interface = new ExchangeInterface(\n            this.onopen.bind(this),\n            this.onclose.bind(this),\n            this.exchange_event.bind(this))\n\n        this.connect()\n    }\n\n    exchange_event(){\n        console.log(\"Updating state\", this.exchange_interface)\n        this.setState({\n            exchange_host: this.exchange_host,\n            orderbook: this.exchange_interface.orderbook,\n            trades: this.exchange_interface.trades,\n            orders: this.exchange_interface.orders,\n            pnl: this.exchange_interface.pnl\n        })\n    }\n\n    onopen(event){\n        console.log(\"Received onopen\", event);\n    }\n\n    onclose(event){\n        console.log(\"Received onclose\", event);\n    }\n\n    connect(){\n        console.log(\"About to connect\");\n        this.exchange_interface.connect(this.state.exchange_host)\n        this.exchange_interface.send({type:\"login\", trader_id:\"aj\"})\n    }\n\n    send_order(side, price, volume){\n        this.exchange_interface.send_order(side, price, volume, \"aj\")\n    }\n\n    render() {\n        return (\n\t\t\t<div className=\"main\">\n              <div className=\"main-trader-interface\">\n                <TraderInterface \n                  trade={this.send_order.bind(this)}\n                  orders={this.state.orders}\n                  trades={this.state.trades}\n                  orderbook={this.state.orderbook}\n                />\n\t\t\t  </div>\n\t\t\t</div>\n\t    );\n    }\n}\n\n\nconst routing = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={Login} />\n      <Route path=\"/TraderInterface\" component={Main} />\n    </div>\n  </Router>\n) \n\nReactDOM.render(routing, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}