{"ast":null,"code":"import _classCallCheck from \"/html/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/html/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/html/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/html/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/html/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nvar ExchangeInterface =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExchangeInterface, _React$Component);\n\n  function ExchangeInterface(props) {\n    var _this;\n\n    _classCallCheck(this, ExchangeInterface);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExchangeInterface).call(this, props));\n    _this.state = {\n      websocket: null\n    };\n    return _this;\n  }\n\n  _createClass(ExchangeInterface, [{\n    key: \"render\",\n    value: function render() {}\n  }, {\n    key: \"connect\",\n    value: function connect(host) {\n      var _this2 = this;\n\n      this.setState(function (state, props) {\n        return {\n          websocket: new WebSocket(props.exchange_host),\n          connected: false\n        };\n      });\n\n      this.state.websocket.onopen = function (event) {\n        _this2.setState({\n          websocket: _this2.state.websocket,\n          connected: true\n        });\n\n        console.log(\"Opened connection\");\n      };\n    }\n  }, {\n    key: \"send\",\n    value: function send(data) {\n      this.state.websocket.send(JSON.stringify(data));\n    }\n  }, {\n    key: \"send_order\",\n    value: function send_order(side, price, volume, trader_id) {\n      var order = {\n        type: \"insert\",\n        trader_id: trader_id,\n        order_id: uuidv4(),\n        side: side,\n        price: price,\n        volume: volume\n      };\n      console.log(\"Sending order\", order);\n      this.send(order);\n    }\n  }, {\n    key: \"register_trader\",\n    value: function register_trader(trader_id) {\n      var message = {\n        type: \"sync_state\",\n        trader_id: trader_id\n      };\n      console.log(\"Sending trader_id\", trader_id);\n      this.send(message);\n    }\n  }, {\n    key: \"send_cancel\",\n    value: function send_cancel(order_id, trader_id) {\n      var cancel = {\n        type: \"cancel\",\n        trader_id: trader_id,\n        order_id: order_id\n      };\n      console.log(\"Sending cancel\", cancel);\n      this.send(cancel);\n    }\n  }]);\n\n  return ExchangeInterface;\n}(React.Component);\n\nexport default ExchangeInterface;","map":{"version":3,"sources":["/html/src/exchange_interface.js"],"names":["React","uuidv4","replace","c","r","Math","random","v","toString","ExchangeInterface","props","state","websocket","host","setState","WebSocket","exchange_host","connected","onopen","event","console","log","data","send","JSON","stringify","side","price","volume","trader_id","order","type","order_id","message","cancel","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,GAAiB;AACb,SAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAASC,CAAT,EAAY;AACvE,QAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AAAA,QAAgCC,CAAC,GAAGJ,CAAC,IAAI,GAAL,GAAWC,CAAX,GAAgBA,CAAC,GAAG,GAAJ,GAAU,GAA9D;AACN,WAAOG,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACE,GAHO,CAAP;AAIH;;IAEKC,iB;;;;;AACF,6BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,2FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAFc;AAKjB;;;;6BAEO,CAAE;;;4BAEFC,I,EAAK;AAAA;;AACT,WAAKC,QAAL,CAAc,UAACH,KAAD,EAAQD,KAAR,EAAkB;AAC5B,eAAO;AACHE,UAAAA,SAAS,EAAE,IAAIG,SAAJ,CAAcL,KAAK,CAACM,aAApB,CADR;AAEHC,UAAAA,SAAS,EAAE;AAFR,SAAP;AAIH,OALD;;AAOA,WAAKN,KAAL,CAAWC,SAAX,CAAqBM,MAArB,GAA8B,UAACC,KAAD,EAAW;AACrC,QAAA,MAAI,CAACL,QAAL,CAAc;AACVF,UAAAA,SAAS,EAAE,MAAI,CAACD,KAAL,CAAWC,SADZ;AAEVK,UAAAA,SAAS,EAAE;AAFD,SAAd;;AAKAG,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,OAPD;AAQH;;;yBAEIC,I,EAAK;AACN,WAAKX,KAAL,CAAWC,SAAX,CAAqBW,IAArB,CAA0BC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAA1B;AACH;;;+BAEUI,I,EAAMC,K,EAAOC,M,EAAQC,S,EAAU;AACtC,UAAIC,KAAK,GAAG;AACRC,QAAAA,IAAI,EAAC,QADG;AAERF,QAAAA,SAAS,EAAEA,SAFH;AAGRG,QAAAA,QAAQ,EAAE/B,MAAM,EAHR;AAIRyB,QAAAA,IAAI,EAAEA,IAJE;AAKRC,QAAAA,KAAK,EAAEA,KALC;AAMRC,QAAAA,MAAM,EAAEA;AANA,OAAZ;AAOAR,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BS,KAA7B;AACA,WAAKP,IAAL,CAAUO,KAAV;AACH;;;oCAEeD,S,EAAU;AACtB,UAAII,OAAO,GAAG;AACVF,QAAAA,IAAI,EAAE,YADI;AAEVF,QAAAA,SAAS,EAAEA;AAFD,OAAd;AAKAT,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCQ,SAAjC;AACA,WAAKN,IAAL,CAAUU,OAAV;AACH;;;gCAEWD,Q,EAAUH,S,EAAU;AAC5B,UAAIK,MAAM,GAAG;AAClBH,QAAAA,IAAI,EAAC,QADa;AAElBF,QAAAA,SAAS,EAAEA,SAFO;AAGTG,QAAAA,QAAQ,EAAEA;AAHD,OAAb;AAIAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Ba,MAA9B;AACA,WAAKX,IAAL,CAAUW,MAAV;AACH;;;;EA7D2BlC,KAAK,CAACmC,S;;AAiEtC,eAAe1B,iBAAf","sourcesContent":["import React from 'react';\n\nfunction uuidv4(){\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n\t\treturn v.toString(16);\n\t  });\n}\n\nclass ExchangeInterface extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            websocket: null\n        }\n    }\n\n    render(){}\n\n    connect(host){\n        this.setState((state, props) => {\n            return {\n                websocket: new WebSocket(props.exchange_host),\n                connected: false\n            }\n        });\n\n        this.state.websocket.onopen = (event) => {\n            this.setState({\n                websocket: this.state.websocket,\n                connected: true\n            })\n\n            console.log(\"Opened connection\");\n        }\n    }\n\n    send(data){\n        this.state.websocket.send(JSON.stringify(data));\n    }\n\n    send_order(side, price, volume, trader_id){\n        let order = {\n            type:\"insert\", \n            trader_id: trader_id,\n            order_id: uuidv4(),\n            side: side,\n            price: price,\n            volume: volume}\n        console.log(\"Sending order\", order);\n        this.send(order);\n    }\n\n    register_trader(trader_id){\n        let message = {\n            type: \"sync_state\",\n            trader_id: trader_id\n        }\n\n        console.log(\"Sending trader_id\", trader_id);\n        this.send(message);\n    }\n\n    send_cancel(order_id, trader_id){\n        let cancel = {\n\t\t\ttype:\"cancel\",\n\t\t\ttrader_id: trader_id, \n            order_id: order_id}\n        console.log(\"Sending cancel\", cancel);\n        this.send(cancel)\n    }\n\n}\n\nexport default ExchangeInterface\n"]},"metadata":{},"sourceType":"module"}