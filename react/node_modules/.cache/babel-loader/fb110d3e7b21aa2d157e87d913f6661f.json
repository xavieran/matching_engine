{"ast":null,"code":"import _classCallCheck from \"/html/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/html/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/html/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/html/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/html/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/html/src/login_page.js\";\nimport './login_page.css';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport { Redirect } from 'react-router';\nimport React from 'react'; //ref={(ref) => this.trader_id = ref}/>\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Login).apply(this, arguments));\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log(\"id\", this.props.trader_id);\n\n      if (this.props.trader_id == null) {\n        return React.createElement(Grid, {\n          textAlign: \"center\",\n          style: {\n            height: '100$'\n          },\n          verticalAlign: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          style: {\n            maxWidth: 450\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(Header, {\n          as: \"h2\",\n          color: \"blue\",\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Login to exchange\"), React.createElement(Form, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(Form.Input, {\n          fluid: true,\n          icon: \"user\",\n          iconPosition: \"left\",\n          placeholder: \"Enter Trader ID\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }), React.createElement(Button, {\n          color: \"blue\",\n          fluid: true,\n          size: \"large\",\n          onClick: function onClick() {\n            if (_this.trader_id.value) {\n              _this.props.login(_this.trader_id.value);\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Login\")))));\n      }\n\n      return React.createElement(Redirect, {\n        push: true,\n        to: this.props.redirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["/html/src/login_page.js"],"names":["Button","Form","Grid","Header","Image","Segment","Redirect","React","Login","console","log","props","trader_id","height","maxWidth","value","login","redirect","Component"],"mappings":";;;;;;AAAA,OAAO,kBAAP;AAEA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,OAA3C,QAA0D,mBAA1D;AAEA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;IACMC,K;;;;;;;;;;;;;6BACO;AAAA;;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKC,KAAL,CAAWC,SAA7B;;AACA,UAAI,KAAKD,KAAL,CAAWC,SAAX,IAAwB,IAA5B,EAAkC;AAC9B,eACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAyB,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAhC;AAAkD,UAAA,aAAa,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,MAAN;AAAa,UAAA,KAAK,EAAE;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEM,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,MAAjB;AAAkB,UAAA,IAAI,EAAC,MAAvB;AAA8B,UAAA,YAAY,EAAC,MAA3C;AAAkD,UAAA,WAAW,EAAC,iBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAER,oBAAC,MAAD;AACA,UAAA,KAAK,EAAC,MADN;AACa,UAAA,KAAK,MADlB;AACmB,UAAA,IAAI,EAAC,OADxB;AAEE,UAAA,OAAO,EAAE,mBAAM;AACX,gBAAI,KAAI,CAACF,SAAL,CAAeG,KAAnB,EAAyB;AACrB,cAAA,KAAI,CAACJ,KAAL,CAAWK,KAAX,CAAiB,KAAI,CAACJ,SAAL,CAAeG,KAAhC;AACH;AACJ,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFQ,CADJ,CAFN,CADF,CADJ;AAqBH;;AAED,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,MAAd;AAAe,QAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWM,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EA5BeV,KAAK,CAACW,S;;AA+B1B,eAAeV,KAAf","sourcesContent":["import './login_page.css';\n\nimport {Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react'\n\nimport { Redirect } from 'react-router';\n\nimport React from 'react';\n\n\n//ref={(ref) => this.trader_id = ref}/>\nclass Login extends React.Component {\n    render() {\n        console.log(\"id\", this.props.trader_id)\n        if (this.props.trader_id == null) {\n            return (\n                <Grid textAlign='center' style={{height: '100$'}} verticalAlign='middle'>\n                  <Grid.Column style={{maxWidth: 450}}>\n                      <Header as='h2' color='blue' textAlign='center'>Login to exchange</Header>\n                        <Form size='large'>\n                            <Segment>\n                                <Form.Input fluid icon='user' iconPosition='left' placeholder='Enter Trader ID'/>\n                    <Button \n                    color='blue' fluid size='large'\n                      onClick={() => {\n                          if (this.trader_id.value){\n                              this.props.login(this.trader_id.value)\n                          }\n                      }}>\n                      Login\n                  </Button>\n              </Segment>\n                  </Form>\n                </Grid.Column>\n                </Grid>\n            )\n        }\n\n        return <Redirect push to={this.props.redirect} />\n    }\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}