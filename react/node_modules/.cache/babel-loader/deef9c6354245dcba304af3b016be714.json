{"ast":null,"code":"import _classCallCheck from \"/html/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/html/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/html/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/html/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/html/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/html/src/index.js\";\nimport ExchangeInterface from './exchange_interface.js';\nimport { TraderInterface, MonitorInterface } from './trader_interface.jsx';\nimport Login from './login_page.js';\nimport './index.css';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { Popup } from 'semantic-ui-react';\nimport { Divider } from 'semantic-ui-react';\nimport { Redirect } from 'react-router';\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar Root =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Root, _React$Component);\n\n  function Root(props) {\n    var _this;\n\n    _classCallCheck(this, Root);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Root).call(this, props));\n    _this.state = {\n      exchange_host: \"ws://le-chateaud:6789/\",\n      trader_id: null,\n      connected: null,\n      orderbook: {\n        bid: [],\n        ask: []\n      },\n      orderbook_updates: [],\n      orders: [],\n      trades: [],\n      pnl: {},\n      hints: [\"Depth of all the world's oceans in meters\", \"There are 7 oceans\"]\n    };\n    return _this;\n  }\n\n  _createClass(Root, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Mounted\");\n      this.exchange_interface = new ExchangeInterface(this.onopen.bind(this), this.onclose.bind(this), this.exchange_event.bind(this));\n      this.exchange_interface.connect(this.state.exchange_host);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      delete this.exchange_interface;\n    }\n  }, {\n    key: \"exchange_event\",\n    value: function exchange_event() {\n      console.log(\"Updating state\", this.exchange_interface);\n      this.setState({\n        exchange_host: this.exchange_host,\n        orderbook: this.exchange_interface.orderbook,\n        trades: this.exchange_interface.trades,\n        orders: this.exchange_interface.orders,\n        hints: this.exchange_interface.hints,\n        orderbook_updates: this.exchange_interface.orderbook_updates,\n        pnl: this.exchange_interface.pnl\n      });\n    }\n  }, {\n    key: \"onopen\",\n    value: function onopen(event) {\n      console.log(\"Received onopen\", event);\n      this.setState({\n        connected: true\n      });\n      this.exchange_interface.send_login(\"\");\n    }\n  }, {\n    key: \"onclose\",\n    value: function onclose(event) {\n      console.log(\"Received onclose\", event);\n      this.setState({\n        connected: false\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      console.log(\"About to connect\");\n      this.exchange_interface.connect();\n    }\n  }, {\n    key: \"send_order\",\n    value: function send_order(side, price, volume) {\n      this.exchange_interface.send_order(side, price, volume, this.state.trader_id);\n    }\n  }, {\n    key: \"send_cancel\",\n    value: function send_cancel(order_id) {\n      this.exchange_interface.send_cancel(order_id, this.state.trader_id);\n    }\n  }, {\n    key: \"send_hint\",\n    value: function send_hint(hint) {\n      this.exchange_interface.send_hint(hint, \"\");\n    }\n  }, {\n    key: \"login\",\n    value: function login(trader_id) {\n      console.log(\"Logging in as: \", trader_id);\n      this.exchange_interface.send_login(trader_id);\n      this.setState({\n        trader_id: trader_id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        stackable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        name: this.state.trader_id ? \"Logout\" : \"Login\",\n        href: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"Monitor\",\n        as: Link,\n        to: \"/monitor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"Admin\",\n        as: Link,\n        to: \"/admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Menu.Item, {\n        name: \"Connected\",\n        position: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.trader_id ? React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Welcome \" + this.state.trader_id) : null, React.createElement(Popup, {\n        trigger: React.createElement(Icon, {\n          name: \"bitcoin\",\n          color: this.state.connected ? \"green\" : \"red\",\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }),\n        content: this.state.connected ? \"Connected to exchange\" : \"Not connected!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(Redirect, {\n            push: true,\n            to: \"/login\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: function render(props) {\n          return React.createElement(Login, {\n            login: _this2.login.bind(_this2),\n            connected: _this2.state.connected,\n            trader_id: _this2.state.trader_id,\n            redirect: \"/TraderInterface\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/TraderInterface\",\n        render: function render(props) {\n          if (_this2.state.trader_id == null) {\n            return React.createElement(Redirect, {\n              push: true,\n              to: \"/\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122\n              },\n              __self: this\n            });\n          } else {\n            return React.createElement(TraderInterface, {\n              trade: _this2.send_order.bind(_this2),\n              trader_id: _this2.state.trader_id,\n              cancel: _this2.send_cancel.bind(_this2),\n              orderbook: _this2.state.orderbook,\n              orderbook_updates: _this2.state.orderbook_updates,\n              orders: _this2.state.orders,\n              trades: _this2.state.trades,\n              hints: _this2.state.hints,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/monitor\",\n        render: function render(props) {\n          return React.createElement(MonitorInterface, {\n            orderbook: _this2.state.orderbook,\n            orderbook_updates: _this2.state.orderbook_updates,\n            hints: _this2.state.hints,\n            trades: _this2.state.trades,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/admin\",\n        render: function render(props) {\n          return React.createElement(MonitorInterface, {\n            hint: _this2.send_hint.bind(_this2),\n            orderbook: _this2.state.orderbook,\n            orderbook_updates: _this2.state.orderbook_updates,\n            hints: _this2.state.hints,\n            trades: _this2.state.trades,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Root;\n}(React.Component);\n\nvar root = React.createElement(Root, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n});\nReactDOM.render(root, document.getElementById('root'));","map":{"version":3,"sources":["/html/src/index.js"],"names":["ExchangeInterface","TraderInterface","MonitorInterface","Login","Menu","Icon","Popup","Divider","Redirect","Link","Route","BrowserRouter","Router","React","ReactDOM","Root","props","state","exchange_host","trader_id","connected","orderbook","bid","ask","orderbook_updates","orders","trades","pnl","hints","console","log","exchange_interface","onopen","bind","onclose","exchange_event","connect","setState","event","send_login","side","price","volume","send_order","order_id","send_cancel","hint","send_hint","login","Component","root","render","document","getElementById"],"mappings":"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","sourcesContent":["import ExchangeInterface from './exchange_interface.js';\nimport {TraderInterface, MonitorInterface} from './trader_interface.jsx';\nimport Login from './login_page.js';\nimport './index.css';\n\nimport {Menu, Icon} from 'semantic-ui-react'\nimport {Popup} from 'semantic-ui-react'\nimport {Divider} from 'semantic-ui-react'\n\nimport { Redirect } from 'react-router';\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass Root extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            exchange_host: \"ws://le-chateaud:6789/\",\n            trader_id: null,\n            connected: null, \n            orderbook: {\n                bid: [],\n                ask: []\n            },\n            orderbook_updates: [],\n            orders: [],\n            trades: [],\n            pnl: {},\n            hints: [\n                \"Depth of all the world's oceans in meters\",\n                \"There are 7 oceans\"]\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"Mounted\")\n        this.exchange_interface = new ExchangeInterface(\n            this.onopen.bind(this),\n            this.onclose.bind(this),\n            this.exchange_event.bind(this))\n\n        this.exchange_interface.connect(this.state.exchange_host)\n    }\n\n    componentWillUnmount() {\n        delete this.exchange_interface\n    }\n\n    exchange_event(){\n        console.log(\"Updating state\", this.exchange_interface)\n        this.setState({\n            exchange_host: this.exchange_host,\n            orderbook: this.exchange_interface.orderbook,\n            trades: this.exchange_interface.trades,\n            orders: this.exchange_interface.orders,\n            hints: this.exchange_interface.hints,\n            orderbook_updates: this.exchange_interface.orderbook_updates,\n            pnl: this.exchange_interface.pnl\n        })\n    }\n\n    onopen(event){\n        console.log(\"Received onopen\", event);\n        this.setState({connected: true})\n        this.exchange_interface.send_login(\"\")\n    }\n\n    onclose(event){\n        console.log(\"Received onclose\", event);\n        this.setState({connected: false})\n    }\n\n    connect(){\n        console.log(\"About to connect\");\n        this.exchange_interface.connect()\n    }\n\n    send_order(side, price, volume){\n        this.exchange_interface.send_order(side, price, volume, this.state.trader_id) \n    }\n\n    send_cancel(order_id){\n        this.exchange_interface.send_cancel(order_id, this.state.trader_id)\n    }\n\n    send_hint(hint){\n        this.exchange_interface.send_hint(hint, \"\")\n    }\n\n    login(trader_id)\n    {\n        console.log(\"Logging in as: \", trader_id)\n        this.exchange_interface.send_login(trader_id)\n        this.setState({trader_id: trader_id})\n    }\n\n    render(){\n        return (\n            <Router>\n              <div>\n                <Menu stackable>\n                  <Menu.Item name={this.state.trader_id ? \"Logout\" : \"Login\"} href=\"/login\" />\n                  <Menu.Item name=\"Monitor\" as={Link} to=\"/monitor\" />\n                  <Menu.Item name=\"Admin\" as={Link} to=\"/admin\" />\n                  <Menu.Item name=\"Connected\" position=\"right\">\n                    {this.state.trader_id ? <b>{\"Welcome \" + this.state.trader_id}</b> : null}\n                    <Popup trigger={<Icon name=\"bitcoin\" color={this.state.connected ? \"green\" : \"red\"} size=\"large\"/>} content={this.state.connected ? \"Connected to exchange\" : \"Not connected!\"}/>\n                  </Menu.Item>\n                </Menu>\n                <Route exact path=\"/\" render={props => <Redirect push to=\"/login\"/>}/>\n                <Route exact path=\"/login\" render={props => \n                  <Login \n                    login={this.login.bind(this)}\n                    connected={this.state.connected}\n                    trader_id={this.state.trader_id}\n                    redirect={\"/TraderInterface\"}/>} />\n                <Route exact path=\"/TraderInterface\" render={props => {\n                  if (this.state.trader_id == null){\n                      return <Redirect push to=\"/\" />\n                  } else {\n                      return <TraderInterface\n                        trade={this.send_order.bind(this)}\n                        trader_id={this.state.trader_id}\n                        cancel={this.send_cancel.bind(this)}\n                        orderbook={this.state.orderbook}\n\t\t\t\t\t\torderbook_updates={this.state.orderbook_updates}\n                        orders={this.state.orders}\n                        trades={this.state.trades}\n                        hints={this.state.hints}/>\n                  }}}\n                />\n                <Route exact path=\"/monitor\" render={props => {\n                  return <MonitorInterface\n                    orderbook={this.state.orderbook}\n                    orderbook_updates={this.state.orderbook_updates}\n                    hints={this.state.hints}\n                    trades={this.state.trades}/>}}\n                />\n                <Route exact path=\"/admin\" render={props => {\n                    return <MonitorInterface\n                      hint={this.send_hint.bind(this)}\n                      orderbook={this.state.orderbook}\n                      orderbook_updates={this.state.orderbook_updates}\n                      hints={this.state.hints}\n                      trades={this.state.trades}/>\n                }}\n                />\n\n              </div>\n            </Router>\n        )\n    }\n}\n\nconst root = <Root/>\n\nReactDOM.render(root, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}