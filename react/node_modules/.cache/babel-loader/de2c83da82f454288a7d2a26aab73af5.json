{"ast":null,"code":"import { CartesianGrid, Legend, ResponsiveContainer, Scatter, ScatterChart, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Chart } from 'react-chartjs-2';\nimport moment from 'moment';\nimport React from 'react';\n/*\nclass OrderbookGraph extends React.Component {\n    render() {\n        console.log(\"Data: \", this.props.data)\n        return (\n            <div className=\"orderbookGraph\">\n  <ResponsiveContainer width = '95%' height = {300} >\n    <LineChart data={this.props.data}>\n\t  <Line \n        name=\"ask\"\n        type=\"stepBefore\" \n        dataKey=\"ask\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#ff0000\"\n        strokeWidth={3}\n      />\n      <Line \n        name=\"bid\"\n        type=\"stepBefore\" \n        dataKey=\"bid\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#00ff00\"\n        strokeWidth={3}\n      />\n      <XAxis \n\t\tdataKey=\"time\"\n\t\tdomain={['auto', 'auto']}\n        type=\"number\"\n\t\ttickFormatter = {(unixTime) => moment(unixTime).format('HH:mm:ss')}\n      />\n      <YAxis \n        dataKey=\"bid\"\n\t\tdomain={['auto', 'auto']}\n        scale=\"linear\"\n      />\n    </LineChart>\n  </ResponsiveContainer>\n            </div>\n        )\n    }\n}\n*/\n\n/*\n          <Line data={\n            {\n                datasets: [\n                {\n                    label: 'Bid',\n                    data: this.props.bid,\n                    steppedLine: 'before',\n                    borderColor: \"#00ff00\"\n                },\n                    {\n                    label: 'Ask', \n                    data: this.props.ask,\n                    steppedLine: 'before',\n                    borderColor: \"#ff0000\",\n                },\n                {\n                    label: 'Trades', \n                    data: this.props.trade,\n                    steppedLine: 'before',\n                    showLine: false,\n                    borderColor: \"#ff00ff\",\n                    pointStyle: \"dot\",\n                    pointRadius: 6,\n                    fill: true\n                }\n              ],\n              options: {\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  title: {\n                      display: true,\n                      text: \"Orderbook and Trades\"\n                  },\n                  scales: {\n                      yAxes: [{\n                          distribution: 'linear',\n                          ticks: {\n                              beginAtZero:true\n                          }\n                      }],\n                      xAxes: [{\n                          type: 'time',\n                          distribution: 'linear',\n                          ticks: {\n                              source: 'data'\n                          }\n                      }]\n                   },\n                  pan: {\n                      enabled: true,\n                      mode: 'x',\n                      speed: 10,\n                      threshold: 10,\n                      onPan: function() {console.log(\"PANNED\");}\n                  },\n                  zoom: {\n                      enabled: true,\n                      mode: 'x',\n                      sensitivity: 0.25\n                  }\n              }\n             }} />\n            */\n\nexport default OrderbookGraph;","map":{"version":3,"sources":["/html/src/orderbook_graph.jsx"],"names":["CartesianGrid","Legend","ResponsiveContainer","Scatter","ScatterChart","Line","LineChart","Tooltip","XAxis","YAxis","Chart","moment","React","OrderbookGraph"],"mappings":"AAAA,SACMA,aADN,EAEMC,MAFN,EAGMC,mBAHN,EAIGC,OAJH,EAKAC,YALA,EAMMC,IANN,EAOMC,SAPN,EAQMC,OARN,EASMC,KATN,EAUIC,KAVJ,QAWO,UAXP;AAaA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEJ,eAAeC,cAAf","sourcesContent":["import {\n      CartesianGrid,\n      Legend,\n      ResponsiveContainer,\n\t  Scatter, \nScatterChart,\n      Line,\n      LineChart,\n      Tooltip,\n      XAxis,\n    YAxis,\n} from 'recharts'\n\nimport { Chart } from 'react-chartjs-2'\n\nimport moment from 'moment'\nimport React from 'react'\n\n/*\nclass OrderbookGraph extends React.Component {\n    render() {\n        console.log(\"Data: \", this.props.data)\n        return (\n            <div className=\"orderbookGraph\">\n  <ResponsiveContainer width = '95%' height = {300} >\n    <LineChart data={this.props.data}>\n\t  <Line \n        name=\"ask\"\n        type=\"stepBefore\" \n        dataKey=\"ask\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#ff0000\"\n        strokeWidth={3}\n      />\n      <Line \n        name=\"bid\"\n        type=\"stepBefore\" \n        dataKey=\"bid\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#00ff00\"\n        strokeWidth={3}\n      />\n      <XAxis \n\t\tdataKey=\"time\"\n\t\tdomain={['auto', 'auto']}\n        type=\"number\"\n\t\ttickFormatter = {(unixTime) => moment(unixTime).format('HH:mm:ss')}\n      />\n      <YAxis \n        dataKey=\"bid\"\n\t\tdomain={['auto', 'auto']}\n        scale=\"linear\"\n      />\n    </LineChart>\n  </ResponsiveContainer>\n            </div>\n        )\n    }\n}\n*/\n    /*\n              <Line data={\n                {\n                    datasets: [\n                    {\n                        label: 'Bid',\n                        data: this.props.bid,\n                        steppedLine: 'before',\n                        borderColor: \"#00ff00\"\n                    },\n                        {\n                        label: 'Ask', \n                        data: this.props.ask,\n                        steppedLine: 'before',\n                        borderColor: \"#ff0000\",\n                    },\n                    {\n                        label: 'Trades', \n                        data: this.props.trade,\n                        steppedLine: 'before',\n                        showLine: false,\n                        borderColor: \"#ff00ff\",\n                        pointStyle: \"dot\",\n                        pointRadius: 6,\n                        fill: true\n                    }\n                  ],\n                  options: {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                          display: true,\n                          text: \"Orderbook and Trades\"\n                      },\n                      scales: {\n                          yAxes: [{\n                              distribution: 'linear',\n                              ticks: {\n                                  beginAtZero:true\n                              }\n                          }],\n                          xAxes: [{\n                              type: 'time',\n                              distribution: 'linear',\n                              ticks: {\n                                  source: 'data'\n                              }\n                          }]\n\n                      },\n                      pan: {\n                          enabled: true,\n                          mode: 'x',\n                          speed: 10,\n                          threshold: 10,\n                          onPan: function() {console.log(\"PANNED\");}\n                      },\n                      zoom: {\n                          enabled: true,\n                          mode: 'x',\n                          sensitivity: 0.25\n                      }\n                  }\n\n                }} />\n                */\n\nexport default OrderbookGraph \n\n\n"]},"metadata":{},"sourceType":"module"}