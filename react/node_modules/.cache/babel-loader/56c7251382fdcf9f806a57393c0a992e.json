{"ast":null,"code":"import _classCallCheck from \"/html/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/html/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nvar ExchangeInterface =\n/*#__PURE__*/\nfunction () {\n  function ExchangeInterface(onopen, onclose) {\n    _classCallCheck(this, ExchangeInterface);\n\n    this.onopen = onopen;\n    this.onclose = onclose;\n    this.orderbook = {};\n    this.trades = {};\n    this.orders = {};\n    this.websocket = null;\n  }\n\n  _createClass(ExchangeInterface, [{\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(host) {\n      var _this = this;\n\n      console.log(\"Opening connection to\", host);\n      this.websocket = new WebSocket(host);\n\n      this.websocket.onopen = function (event) {\n        console.log(\"WebSocket onopen\");\n\n        _this.onopen(event);\n      };\n\n      this.websocket.onclose = function (event) {\n        console.log(\"WebSocket onclose\");\n\n        _this.onclose(event);\n      };\n\n      this.websocket.onerror = function (event) {\n        console.log(\"WebSocket error\");\n      };\n\n      this.websocket.onmessage = function (event) {\n        console.log(\"WebSocket error\");\n        var data = JSON.parse(event.data);\n\n        switch (data.type) {\n          case 'orderbook':\n            console.log(\"Got orderbook\", data);\n            break;\n\n          case 'trade':\n            console.log(\"Got trade\", data);\n            break;\n\n          case 'order':\n            console.log(\"Got order\", data);\n            break;\n\n          default:\n            console.error(\"Unsupported event\", data);\n            break;\n        }\n      };\n    }\n  }, {\n    key: \"handle_orderbook\",\n    value: function handle_orderbook(data) {\n      this.orderbook = data.orderbook;\n    }\n  }, {\n    key: \"handle_order\",\n    value: function handle_order(data) {\n      this.orders.push(data.order);\n    }\n  }, {\n    key: \"handle_order\",\n    value: function handle_order(data) {\n      this.trades.unshift(data.trade);\n    }\n  }, {\n    key: \"send\",\n    value: function send(data) {\n      this.state.websocket.send(JSON.stringify(data));\n    }\n  }, {\n    key: \"send_order\",\n    value: function send_order(side, price, volume, trader_id) {\n      var order = {\n        type: \"insert\",\n        trader_id: trader_id,\n        order_id: uuidv4(),\n        side: side,\n        price: price,\n        volume: volume\n      };\n      console.log(\"Sending order\", order);\n      this.send(order);\n    }\n  }, {\n    key: \"send_trader\",\n    value: function send_trader(trader_id) {\n      var message = {\n        type: \"sync_state\",\n        trader_id: trader_id\n      };\n      console.log(\"Sending trader_id\", trader_id);\n      this.send(message);\n    }\n  }, {\n    key: \"send_cancel\",\n    value: function send_cancel(order_id, trader_id) {\n      var cancel = {\n        type: \"cancel\",\n        trader_id: trader_id,\n        order_id: order_id\n      };\n      console.log(\"Sending cancel\", cancel);\n      this.send(cancel);\n    }\n  }]);\n\n  return ExchangeInterface;\n}();\n\nexport default ExchangeInterface;","map":{"version":3,"sources":["/html/src/exchange_interface.js"],"names":["uuidv4","replace","c","r","Math","random","v","toString","ExchangeInterface","onopen","onclose","orderbook","trades","orders","websocket","host","console","log","WebSocket","event","onerror","onmessage","data","JSON","parse","type","error","push","order","unshift","trade","state","send","stringify","side","price","volume","trader_id","order_id","message","cancel"],"mappings":"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","sourcesContent":["function uuidv4(){\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (Math.random() * 16 | 0), v = c === 'x' ? r : ((r & 0x3) | 0x8);\n\t\treturn v.toString(16);\n\t  });\n}\n\nclass ExchangeInterface {\n    constructor(\n        onopen, \n        onclose\n    ){\n        this.onopen = onopen;\n        this.onclose = onclose;\n        this.orderbook = {}\n        this.trades = {}\n        this.orders = {}\n\n        this.websocket = null;\n    }\n\n    render(){\n        return null;\n    }\n\n    connect(host){\n        console.log(\"Opening connection to\", host)\n        this.websocket = new WebSocket(host)\n        this.websocket.onopen = (event) => {\n            console.log(\"WebSocket onopen\")\n            this.onopen(event)\n        }\n        this.websocket.onclose = (event) => {\n            console.log(\"WebSocket onclose\")\n            this.onclose(event)\n        }\n        this.websocket.onerror = (event) => {\n            console.log(\"WebSocket error\")\n        }\n        this.websocket.onmessage = (event) => {\n            console.log(\"WebSocket error\")\n            let data = JSON.parse(event.data)\n\n            switch (data.type) {\n                case 'orderbook':\n                    console.log(\"Got orderbook\", data)\n                    break;\n                case 'trade':\n                    console.log(\"Got trade\", data)\n                    break;\n                case 'order':\n                    console.log(\"Got order\", data)\n                    break;\n                default:\n                    console.error(\"Unsupported event\", data)\n                    break;\n            }\n        }\n    }\n\n    handle_orderbook(data){\n        this.orderbook = data.orderbook;\n    }\n\n    handle_order(data){\n        this.orders.push(data.order);\n    }\n\n    handle_order(data){\n        this.trades.unshift(data.trade);\n    }\n\n    send(data){\n        this.state.websocket.send(JSON.stringify(data));\n    }\n\n    send_order(side, price, volume, trader_id){\n        let order = {\n            type:\"insert\", \n            trader_id: trader_id,\n            order_id: uuidv4(),\n            side: side,\n            price: price,\n            volume: volume\n        }\n\n        console.log(\"Sending order\", order);\n        this.send(order);\n    }\n\n    send_trader(trader_id){\n        let message = {\n            type: \"sync_state\",\n            trader_id: trader_id\n        }\n\n        console.log(\"Sending trader_id\", trader_id);\n        this.send(message);\n    }\n\n    send_cancel(order_id, trader_id){\n        let cancel = {\n\t\t\ttype:\"cancel\",\n\t\t\ttrader_id: trader_id, \n            order_id: order_id\n        }\n\n        console.log(\"Sending cancel\", cancel);\n        this.send(cancel)\n    }\n}\n\nexport default ExchangeInterface\n"]},"metadata":{},"sourceType":"module"}