{"ast":null,"code":"import _classCallCheck from \"/html/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/html/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nvar ExchangeInterface =\n/*#__PURE__*/\nfunction () {\n  function ExchangeInterface(onopen, onclose, notify) {\n    _classCallCheck(this, ExchangeInterface);\n\n    this.onopen = onopen;\n    this.onclose = onclose;\n    this.notify = notify;\n    this.pnl = {};\n    this.orderbook = {};\n    this.trades = [];\n    this.orders = [];\n    this.websocket = null;\n  }\n\n  _createClass(ExchangeInterface, [{\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(host) {\n      var _this = this;\n\n      console.log(\"Opening connection to\", host);\n      this.websocket = new WebSocket(host);\n\n      this.websocket.onopen = function (event) {\n        console.log(\"WebSocket onopen\");\n\n        _this.onopen(event);\n      };\n\n      this.websocket.onclose = function (event) {\n        console.log(\"WebSocket onclose\");\n\n        _this.onclose(event);\n      };\n\n      this.websocket.onerror = function (event) {\n        console.log(\"WebSocket error\", event);\n      };\n\n      this.websocket.onmessage = function (event) {\n        console.log(\"WebSocket message\", event);\n        var data = JSON.parse(event.data);\n\n        switch (data.type) {\n          case 'orderbook':\n            console.log(\"Got orderbook\", data);\n\n            _this.handle_orderbook(data);\n\n            break;\n\n          case 'trade':\n            console.log(\"Got trade\", data);\n\n            _this.handle_trade(data);\n\n            break;\n\n          case 'order_ack':\n            console.log(\"Got order\", data);\n\n            _this.handle_order_ack(data);\n\n            break;\n\n          case 'cancel_ack':\n            console.log(\"Got cancel\", data);\n\n            _this.handle_cancel_ack(data);\n\n            break;\n\n          default:\n            console.error(\"Unsupported event\", data);\n            break;\n        }\n\n        _this.notify();\n      };\n    }\n  }, {\n    key: \"update_pnl\",\n    value: function update_pnl() {}\n  }, {\n    key: \"handle_orderbook\",\n    value: function handle_orderbook(data) {\n      this.orderbook = data; //this.orderbook.ask = this.orderbook.ask.reverse()\n    }\n  }, {\n    key: \"handle_order_ack\",\n    value: function handle_order_ack(data) {\n      this.orders.push(data);\n    }\n  }, {\n    key: \"handle_cancel_ack\",\n    value: function handle_cancel_ack(data) {\n      this.orders.push(data);\n    }\n  }, {\n    key: \"handle_trade\",\n    value: function handle_trade(data) {\n      this.trades.unshift(data);\n      this.update_pnl();\n    }\n  }, {\n    key: \"send\",\n    value: function send(data) {\n      this.websocket.send(JSON.stringify(data));\n    }\n  }, {\n    key: \"send_order\",\n    value: function send_order(side, price, volume, trader_id) {\n      var order = {\n        type: \"insert\",\n        trader_id: trader_id,\n        order_id: uuidv4(),\n        side: side,\n        price: price,\n        volume: volume\n      };\n      console.log(\"Sending order\", order);\n      this.send(order);\n    }\n  }, {\n    key: \"send_login\",\n    value: function send_login(trader_id) {\n      var message = {\n        type: \"login\",\n        trader_id: trader_id\n      };\n      console.log(\"Logging in with: \", trader_id);\n      this.send(message);\n    }\n  }, {\n    key: \"send_cancel\",\n    value: function send_cancel(order_id, trader_id) {\n      var cancel = {\n        type: \"cancel\",\n        trader_id: trader_id,\n        order_id: order_id\n      };\n      console.log(\"Sending cancel\", cancel);\n      this.send(cancel);\n    }\n  }]);\n\n  return ExchangeInterface;\n}();\n\nexport default ExchangeInterface;","map":{"version":3,"sources":["/html/src/exchange_interface.js"],"names":["uuidv4","replace","c","r","Math","random","v","toString","ExchangeInterface","onopen","onclose","notify","pnl","orderbook","trades","orders","websocket","host","console","log","WebSocket","event","onerror","onmessage","data","JSON","parse","type","handle_orderbook","handle_trade","handle_order_ack","handle_cancel_ack","error","push","unshift","update_pnl","send","stringify","side","price","volume","trader_id","order","order_id","message","cancel"],"mappings":"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","sourcesContent":["function uuidv4(){\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (Math.random() * 16 | 0), v = c === 'x' ? r : ((r & 0x3) | 0x8);\n\t\treturn v.toString(16);\n\t  });\n}\n\nclass ExchangeInterface {\n    constructor(\n        onopen, \n        onclose,\n        notify\n    ){\n        this.onopen = onopen;\n        this.onclose = onclose;\n        this.notify = notify\n\n        this.pnl = {}\n        this.orderbook = {}\n        this.trades = []\n        this.orders = []\n\n        this.websocket = null;\n    }\n\n    render(){\n        return null;\n    }\n\n    connect(host){\n        console.log(\"Opening connection to\", host)\n        this.websocket = new WebSocket(host)\n        this.websocket.onopen = (event) => {\n            console.log(\"WebSocket onopen\")\n            this.onopen(event)\n        }\n        this.websocket.onclose = (event) => {\n            console.log(\"WebSocket onclose\")\n            this.onclose(event)\n        }\n        this.websocket.onerror = (event) => {\n            console.log(\"WebSocket error\", event)\n        }\n        this.websocket.onmessage = (event) => {\n            console.log(\"WebSocket message\", event)\n            let data = JSON.parse(event.data)\n\n            switch (data.type) {\n                case 'orderbook':\n                    console.log(\"Got orderbook\", data)\n                    this.handle_orderbook(data)\n                    break;\n                case 'trade':\n                    console.log(\"Got trade\", data)\n                    this.handle_trade(data)\n                    break;\n                case 'order_ack':\n                    console.log(\"Got order\", data)\n                    this.handle_order_ack(data)\n                    break;\n                case 'cancel_ack':\n                    console.log(\"Got cancel\", data)\n                    this.handle_cancel_ack(data)\n                    break;\n                default:\n                    console.error(\"Unsupported event\", data)\n                    break;\n            }\n\n            this.notify();\n        }\n    }\n\n    update_pnl(){\n\n    }\n\n    handle_orderbook(data){\n        this.orderbook = data\n        //this.orderbook.ask = this.orderbook.ask.reverse()\n    }\n\n    handle_order_ack(data){\n        this.orders.push(data);\n    }\n\n    handle_cancel_ack(data){\n        this.orders.push(data);\n    }\n\n    handle_trade(data){\n        this.trades.unshift(data);\n        this.update_pnl()\n    }\n\n    send(data){\n        this.websocket.send(JSON.stringify(data));\n    }\n\n    send_order(side, price, volume, trader_id){\n        let order = {\n            type:\"insert\", \n            trader_id: trader_id,\n            order_id: uuidv4(),\n            side: side,\n            price: price,\n            volume: volume\n        }\n\n        console.log(\"Sending order\", order);\n        this.send(order);\n    }\n\n    send_login(trader_id){\n        let message = {\n            type: \"login\",\n            trader_id: trader_id\n        }\n\n        console.log(\"Logging in with: \", trader_id);\n        this.send(message);\n    }\n\n    send_cancel(order_id, trader_id){\n        let cancel = {\n\t\t\ttype:\"cancel\",\n\t\t\ttrader_id: trader_id, \n            order_id: order_id\n        }\n\n        console.log(\"Sending cancel\", cancel);\n        this.send(cancel)\n    }\n}\n\nexport default ExchangeInterface\n"]},"metadata":{},"sourceType":"module"}