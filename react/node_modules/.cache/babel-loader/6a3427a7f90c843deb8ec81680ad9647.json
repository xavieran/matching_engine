{"ast":null,"code":"import _classCallCheck from \"/html/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/html/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/html/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/html/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/html/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/html/src/orderbook_graph.jsx\";\nimport { CartesianGrid, Legend, ResponsiveContainer, Scatter, ScatterChart, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport React from 'react';\n\nvar OrderbookGraph =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderbookGraph, _React$Component);\n\n  function OrderbookGraph() {\n    _classCallCheck(this, OrderbookGraph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrderbookGraph).apply(this, arguments));\n  }\n\n  _createClass(OrderbookGraph, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"Data: \", this.props.data);\n      return React.createElement(\"div\", {\n        className: \"orderbookGraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"95%\",\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Line, {\n        name: \"ask\",\n        type: \"stepBefore\",\n        dataKey: \"value\",\n        dot: false,\n        isAnimationActive: false,\n        stroke: \"#ff0000\",\n        strokeWidth: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(Line, {\n        name: \"bid\",\n        type: \"stepBefore\",\n        dataKey: \"value\",\n        dot: false,\n        isAnimationActive: false,\n        stroke: \"#00ff00\",\n        strokeWidth: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        datakey: \"time\",\n        scale: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        datakey: \"value\",\n        scale: \"linear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return OrderbookGraph;\n}(React.Component);\n/*\n          <Line data={\n            {\n                datasets: [\n                {\n                    label: 'Bid',\n                    data: this.props.bid,\n                    steppedLine: 'before',\n                    borderColor: \"#00ff00\"\n                },\n                    {\n                    label: 'Ask', \n                    data: this.props.ask,\n                    steppedLine: 'before',\n                    borderColor: \"#ff0000\",\n                },\n                {\n                    label: 'Trades', \n                    data: this.props.trade,\n                    steppedLine: 'before',\n                    showLine: false,\n                    borderColor: \"#ff00ff\",\n                    pointStyle: \"dot\",\n                    pointRadius: 6,\n                    fill: true\n                }\n              ],\n              options: {\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  title: {\n                      display: true,\n                      text: \"Orderbook and Trades\"\n                  },\n                  scales: {\n                      yAxes: [{\n                          distribution: 'linear',\n                          ticks: {\n                              beginAtZero:true\n                          }\n                      }],\n                      xAxes: [{\n                          type: 'time',\n                          distribution: 'linear',\n                          ticks: {\n                              source: 'data'\n                          }\n                      }]\n                   },\n                  pan: {\n                      enabled: true,\n                      mode: 'x',\n                      speed: 10,\n                      threshold: 10,\n                      onPan: function() {console.log(\"PANNED\");}\n                  },\n                  zoom: {\n                      enabled: true,\n                      mode: 'x',\n                      sensitivity: 0.25\n                  }\n              }\n             }} />\n            */\n\n\nexport default OrderbookGraph;","map":{"version":3,"sources":["/html/src/orderbook_graph.jsx"],"names":["CartesianGrid","Legend","ResponsiveContainer","Scatter","ScatterChart","Line","LineChart","Tooltip","XAxis","YAxis","React","OrderbookGraph","console","log","props","data","Component"],"mappings":";;;;;;AAAA,SACMA,aADN,EAEMC,MAFN,EAGMC,mBAHN,EAIGC,OAJH,EAKAC,YALA,EAMMC,IANN,EAOMC,SAPN,EAQMC,OARN,EASMC,KATN,EAUIC,KAVJ,QAWO,UAXP;AAaA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,c;;;;;;;;;;;;;6BACO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKC,KAAL,CAAWC,IAAjC;AACA,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACV,oBAAC,mBAAD;AAAqB,QAAA,KAAK,EAAG,KAA7B;AAAmC,QAAA,MAAM,EAAI,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,IAAD;AACK,QAAA,IAAI,EAAC,KADV;AAEK,QAAA,IAAI,EAAC,YAFV;AAGK,QAAA,OAAO,EAAC,OAHb;AAIK,QAAA,GAAG,EAAE,KAJV;AAKD,QAAA,iBAAiB,EAAE,KALlB;AAMK,QAAA,MAAM,EAAC,SANZ;AAOK,QAAA,WAAW,EAAE,CAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADC,EAUE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,OAAO,EAAC,OAHV;AAIE,QAAA,GAAG,EAAE,KAJP;AAKJ,QAAA,iBAAiB,EAAE,KALf;AAME,QAAA,MAAM,EAAC,SANT;AAOE,QAAA,WAAW,EAAE,CAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAmBE,oBAAC,KAAD;AACJ,QAAA,OAAO,EAAC,MADJ;AAEE,QAAA,KAAK,EAAC,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EAuBE,oBAAC,KAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBF,CADF,CADU,CADJ;AAkCH;;;;EArCwBL,KAAK,CAACM,S;AAuC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEJ,eAAeL,cAAf","sourcesContent":["import {\n      CartesianGrid,\n      Legend,\n      ResponsiveContainer,\n\t  Scatter, \nScatterChart,\n      Line,\n      LineChart,\n      Tooltip,\n      XAxis,\n    YAxis,\n} from 'recharts'\n\nimport React from 'react'\n\nclass OrderbookGraph extends React.Component {\n    render() {\n        console.log(\"Data: \", this.props.data)\n        return (\n            <div className=\"orderbookGraph\">\n  <ResponsiveContainer width = '95%' height = {300} >\n    <LineChart data={data}>\n\t  <Line \n        name=\"ask\"\n        type=\"stepBefore\" \n        dataKey=\"value\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#ff0000\"\n        strokeWidth={3}\n      />\n      <Line \n        name=\"bid\"\n        type=\"stepBefore\" \n        dataKey=\"value\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#00ff00\"\n        strokeWidth={3}\n      />\n      <XAxis \n\t\tdatakey=\"time\"\n        scale=\"time\"\n      />\n      <YAxis \n        datakey=\"value\"\n        scale=\"linear\"\n      />\n    </LineChart>\n  </ResponsiveContainer>\n            </div>\n        )\n    }\n}\n    /*\n              <Line data={\n                {\n                    datasets: [\n                    {\n                        label: 'Bid',\n                        data: this.props.bid,\n                        steppedLine: 'before',\n                        borderColor: \"#00ff00\"\n                    },\n                        {\n                        label: 'Ask', \n                        data: this.props.ask,\n                        steppedLine: 'before',\n                        borderColor: \"#ff0000\",\n                    },\n                    {\n                        label: 'Trades', \n                        data: this.props.trade,\n                        steppedLine: 'before',\n                        showLine: false,\n                        borderColor: \"#ff00ff\",\n                        pointStyle: \"dot\",\n                        pointRadius: 6,\n                        fill: true\n                    }\n                  ],\n                  options: {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                          display: true,\n                          text: \"Orderbook and Trades\"\n                      },\n                      scales: {\n                          yAxes: [{\n                              distribution: 'linear',\n                              ticks: {\n                                  beginAtZero:true\n                              }\n                          }],\n                          xAxes: [{\n                              type: 'time',\n                              distribution: 'linear',\n                              ticks: {\n                                  source: 'data'\n                              }\n                          }]\n\n                      },\n                      pan: {\n                          enabled: true,\n                          mode: 'x',\n                          speed: 10,\n                          threshold: 10,\n                          onPan: function() {console.log(\"PANNED\");}\n                      },\n                      zoom: {\n                          enabled: true,\n                          mode: 'x',\n                          sensitivity: 0.25\n                      }\n                  }\n\n                }} />\n                */\n\nexport default OrderbookGraph \n\n\n"]},"metadata":{},"sourceType":"module"}