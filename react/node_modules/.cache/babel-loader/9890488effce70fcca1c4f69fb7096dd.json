{"ast":null,"code":"import _classCallCheck from \"/html/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/html/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/html/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/html/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/html/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/html/src/orderbook_graph.jsx\";\nimport { CartesianGrid, Legend, ResponsiveContainer, Scatter, ScatterChart, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Chart } from 'react-chartjs-2';\nimport moment from 'moment';\nimport React from 'react';\n/*\nclass OrderbookGraph extends React.Component {\n    render() {\n        console.log(\"Data: \", this.props.data)\n        return (\n            <div className=\"orderbookGraph\">\n  <ResponsiveContainer width = '95%' height = {300} >\n    <LineChart data={this.props.data}>\n\t  <Line \n        name=\"ask\"\n        type=\"stepBefore\" \n        dataKey=\"ask\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#ff0000\"\n        strokeWidth={3}\n      />\n      <Line \n        name=\"bid\"\n        type=\"stepBefore\" \n        dataKey=\"bid\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#00ff00\"\n        strokeWidth={3}\n      />\n      <XAxis \n\t\tdataKey=\"time\"\n\t\tdomain={['auto', 'auto']}\n        type=\"number\"\n\t\ttickFormatter = {(unixTime) => moment(unixTime).format('HH:mm:ss')}\n      />\n      <YAxis \n        dataKey=\"bid\"\n\t\tdomain={['auto', 'auto']}\n        scale=\"linear\"\n      />\n    </LineChart>\n  </ResponsiveContainer>\n            </div>\n        )\n    }\n}\n*/\n\nvar OrderbookGraph =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderbookGraph, _React$Component);\n\n  function OrderbookGraph() {\n    _classCallCheck(this, OrderbookGraph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrderbookGraph).apply(this, arguments));\n  }\n\n  _createClass(OrderbookGraph, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Line, {\n        width: 300,\n        height: 300,\n        data: {\n          datasets: [{\n            label: 'Bid',\n            data: [1, 2, 3, 4],\n            steppedLine: 'before',\n            borderColor: \"#00ff00\"\n          }, {\n            label: 'Ask',\n            data: [9, 8, 7, 6],\n            steppedLine: 'before',\n            borderColor: \"#ff0000\"\n          }],\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            title: {\n              display: true,\n              text: \"Orderbook and Trades\"\n            },\n            scales: {\n              yAxes: [{\n                distribution: 'linear',\n                ticks: {\n                  beginAtZero: true\n                }\n              }],\n              xAxes: [{\n                type: 'time',\n                distribution: 'linear',\n                ticks: {\n                  source: 'data'\n                }\n              }]\n            },\n            pan: {\n              enabled: true,\n              mode: 'x',\n              speed: 10,\n              threshold: 10,\n              onPan: function onPan() {\n                console.log(\"PANNED\");\n              }\n            },\n            zoom: {\n              enabled: true,\n              mode: 'x',\n              sensitivity: 0.25\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return OrderbookGraph;\n}(React.Component);\n\nexport default OrderbookGraph;","map":{"version":3,"sources":["/html/src/orderbook_graph.jsx"],"names":["CartesianGrid","Legend","ResponsiveContainer","Scatter","ScatterChart","Line","LineChart","Tooltip","XAxis","YAxis","Chart","moment","React","OrderbookGraph","datasets","label","data","steppedLine","borderColor","options","responsive","maintainAspectRatio","title","display","text","scales","yAxes","distribution","ticks","beginAtZero","xAxes","type","source","pan","enabled","mode","speed","threshold","onPan","console","log","zoom","sensitivity","Component"],"mappings":";;;;;;AAAA,SACMA,aADN,EAEMC,MAFN,EAGMC,mBAHN,EAIGC,OAJH,EAKAC,YALA,EAMMC,IANN,EAOMC,SAPN,EAQMC,OARN,EASMC,KATN,EAUIC,KAVJ,QAWO,UAXP;AAaA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6CMC,c;;;;;;;;;;;;;6BACO;AACX,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,GAAb;AAAkB,QAAA,MAAM,EAAE,GAA1B;AAA+B,QAAA,IAAI,EAC5B;AACIC,UAAAA,QAAQ,EAAE,CACV;AACIC,YAAAA,KAAK,EAAE,KADX;AAEIC,YAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAFV;AAGIC,YAAAA,WAAW,EAAE,QAHjB;AAIIC,YAAAA,WAAW,EAAE;AAJjB,WADU,EAON;AACAH,YAAAA,KAAK,EAAE,KADP;AAEAC,YAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAFN;AAGAC,YAAAA,WAAW,EAAE,QAHb;AAIAC,YAAAA,WAAW,EAAE;AAJb,WAPM,CADd;AAeEC,UAAAA,OAAO,EAAE;AACLC,YAAAA,UAAU,EAAE,IADP;AAELC,YAAAA,mBAAmB,EAAE,KAFhB;AAGLC,YAAAA,KAAK,EAAE;AACHC,cAAAA,OAAO,EAAE,IADN;AAEHC,cAAAA,IAAI,EAAE;AAFH,aAHF;AAOLC,YAAAA,MAAM,EAAE;AACJC,cAAAA,KAAK,EAAE,CAAC;AACJC,gBAAAA,YAAY,EAAE,QADV;AAEJC,gBAAAA,KAAK,EAAE;AACHC,kBAAAA,WAAW,EAAC;AADT;AAFH,eAAD,CADH;AAOJC,cAAAA,KAAK,EAAE,CAAC;AACJC,gBAAAA,IAAI,EAAE,MADF;AAEJJ,gBAAAA,YAAY,EAAE,QAFV;AAGJC,gBAAAA,KAAK,EAAE;AACHI,kBAAAA,MAAM,EAAE;AADL;AAHH,eAAD;AAPH,aAPH;AAuBLC,YAAAA,GAAG,EAAE;AACDC,cAAAA,OAAO,EAAE,IADR;AAEDC,cAAAA,IAAI,EAAE,GAFL;AAGDC,cAAAA,KAAK,EAAE,EAHN;AAIDC,cAAAA,SAAS,EAAE,EAJV;AAKDC,cAAAA,KAAK,EAAE,iBAAW;AAACC,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAAuB;AALzC,aAvBA;AA8BLC,YAAAA,IAAI,EAAE;AACFP,cAAAA,OAAO,EAAE,IADP;AAEFC,cAAAA,IAAI,EAAE,GAFJ;AAGFO,cAAAA,WAAW,EAAE;AAHX;AA9BD;AAfX,SADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAsDD;;;;EAxD4B9B,KAAK,CAAC+B,S;;AA0DnC,eAAe9B,cAAf","sourcesContent":["import {\n      CartesianGrid,\n      Legend,\n      ResponsiveContainer,\n\t  Scatter, \nScatterChart,\n      Line,\n      LineChart,\n      Tooltip,\n      XAxis,\n    YAxis,\n} from 'recharts'\n\nimport { Chart } from 'react-chartjs-2'\n\nimport moment from 'moment'\nimport React from 'react'\n\n/*\nclass OrderbookGraph extends React.Component {\n    render() {\n        console.log(\"Data: \", this.props.data)\n        return (\n            <div className=\"orderbookGraph\">\n  <ResponsiveContainer width = '95%' height = {300} >\n    <LineChart data={this.props.data}>\n\t  <Line \n        name=\"ask\"\n        type=\"stepBefore\" \n        dataKey=\"ask\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#ff0000\"\n        strokeWidth={3}\n      />\n      <Line \n        name=\"bid\"\n        type=\"stepBefore\" \n        dataKey=\"bid\" \n        dot={false}\n\t\tisAnimationActive={false}\n        stroke=\"#00ff00\"\n        strokeWidth={3}\n      />\n      <XAxis \n\t\tdataKey=\"time\"\n\t\tdomain={['auto', 'auto']}\n        type=\"number\"\n\t\ttickFormatter = {(unixTime) => moment(unixTime).format('HH:mm:ss')}\n      />\n      <YAxis \n        dataKey=\"bid\"\n\t\tdomain={['auto', 'auto']}\n        scale=\"linear\"\n      />\n    </LineChart>\n  </ResponsiveContainer>\n            </div>\n        )\n    }\n}\n*/\n\nclass OrderbookGraph extends React.Component {\n    render() {\n\t\treturn <Line width={300} height={300} data={\n                {\n                    datasets: [\n                    {\n                        label: 'Bid',\n                        data: [1,2,3,4],\n                        steppedLine: 'before',\n                        borderColor: \"#00ff00\"\n                    },\n                        {\n                        label: 'Ask', \n                        data: [9,8,7,6],\n                        steppedLine: 'before',\n                        borderColor: \"#ff0000\",\n                    },\n                  ],\n                  options: {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                          display: true,\n                          text: \"Orderbook and Trades\"\n                      },\n                      scales: {\n                          yAxes: [{\n                              distribution: 'linear',\n                              ticks: {\n                                  beginAtZero:true\n                              }\n                          }],\n                          xAxes: [{\n                              type: 'time',\n                              distribution: 'linear',\n                              ticks: {\n                                  source: 'data'\n                              }\n                          }]\n\n                      },\n                      pan: {\n                          enabled: true,\n                          mode: 'x',\n                          speed: 10,\n                          threshold: 10,\n                          onPan: function() {console.log(\"PANNED\");}\n                      },\n                      zoom: {\n                          enabled: true,\n                          mode: 'x',\n                          sensitivity: 0.25\n                      }\n                  }\n\n                }} />\n}\n}\nexport default OrderbookGraph \n\n\n"]},"metadata":{},"sourceType":"module"}