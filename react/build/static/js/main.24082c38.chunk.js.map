{"version":3,"sources":["pnl.js","exchange_interface.js","orderbook_graph.jsx","trader_interface.jsx","login_page.js","index.js"],"names":["calculate_pnl","price","trades","net_pos","tot_buy","tot_sell","tot_buy_val","tot_sell_val","i","length","sign","side","vol","volume","val","avg_buy_px","avg_sell_px","abs_tot_sell","pnl","ExchangeInterface","onopen","onclose","notify","Object","classCallCheck","this","pnls","orderbook","orderbook_updates","all_trades","orders","hints","status","websocket","host","_this","console","log","WebSocket","event","onerror","onmessage","data","JSON","parse","type","handle_orderbook","handle_trade","handle_order_ack","handle_cancel_ack","handle_hints","handle_sync_state","handle_status","error","update_pnl","Date","ob","midprice","ask","bid","_arr","entries","_i","_ref3","_ref2","slicedToArray","trader_id","reverse","handle_orderbook_update","time","moment","tick","push","order_id","splice","unshift","orderbooks","send","stringify","order","replace","c","r","Math","random","toString","message","cancel","hint","OrderbookGraph","datasets","label","props","map","d","t","y","steppedLine","borderColor","fill","react_default","a","createElement","className","es","height","options","responsive","maintainAspectRatio","scales","yAxes","distribution","ticks","beginAtZero","suggestedMin","xAxes","source","pan","enabled","mode","speed","threshold","zoom","sensitivity","React","Component","QuoteInput","possibleConstructorReturn","getPrototypeOf","call","state","_this2","onClick","trade","toUpperCase","react_numeric_input_default","min","max","step","precision","value","size","mobile","onChange","valueAsNumber","s","setState","HitLimitInput","_this3","Label","pointing","color","TradeInput","_this4","trader_interface_QuoteInput","place_quote","trader_interface_HitLimitInput","hit_limit","hit_limit_change","PnLRow","x","Intl","NumberFormat","style","currencyDisplay","currency","format","PnlDisplay","e","trader_interface_PnLRow","key","Table_default","bordered","OrderList","_this5","sort","b","Icon","name","Header","as","striped","hover","TradeList","Segment","lib","trClassName","row","rowIndex","exportCSV","isKey","hidden","dataField","width","dataFormat","VolumeLevel","Orderbook","_this6","ask_levels","bid_levels","level","tradable","hit_trade","trader_interface_VolumeLevel","HintInput","_this7","Form_default","Group","controlId","Control","rows","placeholder","ref","Button_default","variant","send_hint","HintsDisplay","_this8","active","_this9","header","content","slice","Accordion","Title","index","Content","RangeOrderbookGraph","_this10","_this11","settings","start","v","orderbook_graph","build","discrete","TraderInterface","_this12","_this13","Container_default","max-width","Row_default","Col_default","trader_interface_HintsDisplay","trader_interface_RangeOrderbookGraph","md","trader_interface_TradeInput","justifyContent","trader_interface_Orderbook","trader_interface_PnlDisplay","trader_interface_OrderList","trader_interface_TradeList","MonitorInterface","AdminInterface","_this14","trader_interface_HintInput","Login","Grid","textAlign","verticalAlign","Column","maxWidth","Form_Form","Input","fluid","icon","iconPosition","target","Button_Button","login","Redirect","to","redirect","Root","exchange_host","connected","exchange_interface","bind","exchange_event","connect","send_login","send_order","send_cancel","BrowserRouter","Menu","stackable","Item","href","Link","position","Popup","trigger","Route","exact","path","render","src_login_page","trader_interface_TraderInterface","trader_interface_MonitorInterface","trader_interface_AdminInterface","root","src_Root","ReactDOM","document","getElementById"],"mappings":"8PAoDeA,MApDf,SAAuBC,EAAOC,GAQ1B,IAPA,IACIC,EAAU,EACVC,EAAU,EACVC,EAAW,EACXC,EAAc,EACdC,EAAe,EAEVC,EAAI,EAAGA,EAAIN,EAAOO,OAAQD,GAAK,EAAE,CACtC,IAAME,EAAyB,OAAlBR,EAAOM,GAAGG,KAAgB,GAAK,EACtCC,EAAMV,EAAOM,GAAGK,OAASH,EAEzBI,EAAMF,EADDV,EAAOM,GAAGP,MAErBE,GAAWS,EAEPF,EAAO,GACPN,GAAWQ,EACXN,GAAeQ,IAEfT,GAAYO,EACZL,GAAgBO,GAKxB,IAAMC,EAAaT,EAAcF,EAC3BY,EAAcT,EAAeF,EAC7BY,GAAgBZ,EActB,MAAO,CACHa,IAbW,GAAXd,GAAgC,GAAhBa,EACVA,GAAgBD,EAAcf,GACb,GAAhBgB,GAAgC,GAAXb,EACtBA,GAAWH,EAAQc,GAClBX,EAAUa,EACXA,GAAgBD,EAAcD,IAAeX,EAAUa,IAAiBhB,EAAQc,GAC/EX,EAAUa,EACXb,GAAWY,EAAcD,IAAeE,EAAeb,IAAYY,EAAcf,GAEhFe,EAAcC,EAAiBF,EAAaX,EAKnDH,MAAOA,EACPE,QAASA,EACTC,QAASA,EACTC,SAAUA,EACVU,WAAYA,EACZC,YAAaA,yBC4MNG,aAjPX,SAAAA,EACIC,EACAC,EACAC,GACFC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GACEM,KAAKL,OAASA,EACdK,KAAKJ,QAAUA,EACfI,KAAKH,OAASA,EAEdG,KAAKC,KAAO,GACZD,KAAKE,UAAY,GACjBF,KAAKG,kBAAoB,GACzBH,KAAKvB,OAAS,GACduB,KAAKI,WAAa,GAClBJ,KAAKK,OAAS,GACdL,KAAKM,MAAQ,GACbN,KAAKO,OAAS,SAEdP,KAAKQ,UAAY,0DAIjB,OAAO,qCAGHC,GAAK,IAAAC,EAAAV,KACTW,QAAQC,IAAI,wBAAyBH,GACrCT,KAAKQ,UAAY,IAAIK,UAAUJ,GAC/BT,KAAKQ,UAAUb,OAAS,SAACmB,GACrBH,QAAQC,IAAI,oBACZF,EAAKf,OAAOmB,IAEhBd,KAAKQ,UAAUZ,QAAU,SAACkB,GACtBH,QAAQC,IAAI,qBACZF,EAAKd,QAAQkB,IAEjBd,KAAKQ,UAAUO,QAAU,SAACD,GACtBH,QAAQC,IAAI,kBAAmBE,IAEnCd,KAAKQ,UAAUQ,UAAY,SAACF,GACxBH,QAAQC,IAAI,oBAAqBE,GACjC,IAAIG,EAAOC,KAAKC,MAAML,EAAMG,MAE5B,OAAQA,EAAKG,MACT,IAAK,YACDT,QAAQC,IAAI,gBAAiBK,GAC7BP,EAAKW,iBAAiBJ,GACtB,MACJ,IAAK,QACDN,QAAQC,IAAI,YAAaK,GACzBP,EAAKY,aAAaL,GAClB,MACJ,IAAK,YACDN,QAAQC,IAAI,YAAaK,GACzBP,EAAKa,iBAAiBN,GACtB,MACJ,IAAK,aACDN,QAAQC,IAAI,aAAcK,GAC1BP,EAAKc,kBAAkBP,GACvB,MACJ,IAAK,QACDN,QAAQC,IAAI,YAAaK,GACzBP,EAAKe,aAAaR,GAClB,MACJ,IAAK,aACDN,QAAQC,IAAI,iBAAkBK,GAC9BP,EAAKgB,kBAAkBT,GACvB,MACJ,IAAK,SACDN,QAAQC,IAAI,sBAAuBK,GACnCP,EAAKiB,cAAcV,GACnB,MAEJ,QACIN,QAAQiB,MAAM,oBAAqBX,GAG3CP,EAAKmB,aACLnB,EAAKb,+CAKTc,QAAQC,IAAI,eAAgB,IAAIkB,MAGhC,IAFA,IAAMC,EAAK/B,KAAKG,kBAAkBH,KAAKG,kBAAkBnB,OAAS,GAC5DgD,EAA+B,IAAnBD,EAAGE,IAAMF,EAAGG,KAHtBC,EAI2BrC,OAAOsC,QAAQpC,KAAKvB,QAAvD4D,EAAA,EAAAA,EAAAF,EAAAnD,OAAAqD,IAA+D,KAAAC,EAAAH,EAAAE,GAAAE,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAwC,EAAA,GAAnDG,EAAmDF,EAAA,GAAxC9D,EAAwC8D,EAAA,GAC3DvC,KAAKC,KAAKwC,GAAalE,EAAcyD,EAAUvD,GAEnDkC,QAAQC,IAAI,aAAc,IAAIkB,4CAGpBb,GACVjB,KAAKO,OAASU,EAAKV,gDAGNU,GACbjB,KAAKE,UAAYe,EACjBjB,KAAKE,UAAU+B,IAAMjC,KAAKE,UAAU+B,IAAIS,UACxC1C,KAAK2C,wBAAwB3C,KAAKE,2DAGde,GACpB,IAAIiB,EAAM,KACND,EAAM,KACNW,EAAOC,IAAO5B,EAAK2B,MAEC,IAApB3B,EAAKiB,IAAIlD,SACTkD,EAAMjB,EAAKiB,IAAI,GAAG1D,OAGE,IAApByC,EAAKgB,IAAIjD,SACTiD,EAAMhB,EAAKgB,IAAIhB,EAAKgB,IAAIjD,OAAS,GAAGR,OAExC,IAAMsE,EAAO,CAACF,KAAMA,EAAMV,IAAKA,EAAKD,IAAKA,GACzCtB,QAAQC,IAAI,+BAAgCkC,GAE5C9C,KAAKG,kBAAkB4C,KAAKD,4CAGf7B,GACbjB,KAAKK,OAAO0C,KAAK9B,6CAGHA,GACd,IAAK,IAAIlC,EAAI,EAAGA,EAAIiB,KAAKK,OAAOrB,OAAQD,IACpC,GAAIiB,KAAKK,OAAOtB,GAAGiE,WAAa/B,EAAK+B,SACrC,CACIrC,QAAQC,IAAI,mBAAoBZ,KAAKK,OAAOtB,IAC5CiB,KAAKK,OAAO4C,OAAOlE,EAAG,GACtB,4CAKCkC,GAUT,GATAjB,KAAKI,WAAW8C,QAAQjC,GAEpBjB,KAAKvB,OAAOwC,EAAKwB,WACjBzC,KAAKvB,OAAOwC,EAAKwB,WAAWS,QAAQjC,GAEpCjB,KAAKvB,OAAOwC,EAAKwB,WAAa,CAACxB,GAI/BA,EAAKwB,WAAazC,KAAKyC,UACvB,IAAK,IAAI1D,EAAI,EAAGA,EAAIiB,KAAKK,OAAOrB,OAAQD,IACpC,GAAIiB,KAAKK,OAAOtB,GAAGiE,WAAa/B,EAAK+B,SACrC,CACIhD,KAAKK,OAAOtB,GAAGK,QAAU6B,EAAK7B,OAC1BY,KAAKK,OAAOtB,GAAGK,QAAU,IACzBuB,QAAQC,IAAI,mBAAoBZ,KAAKK,OAAOtB,IAC5CiB,KAAKK,OAAO4C,OAAOlE,EAAG,IAE1B,4CAMHkC,GACTN,QAAQC,IAAI,kBACZZ,KAAKM,MAAQW,EAAKX,gDAGJW,GACdN,QAAQC,IAAI,iBACZZ,KAAKyB,aAAaR,GACbjB,KAAKvB,OAAOwC,EAAKwB,YAAiC,KAAlBxB,EAAKwB,YACtCzC,KAAKvB,OAAOwC,EAAKwB,WAAa,IAGlC,IAAK,IAAI1D,EAAI,EAAGA,EAAIkC,EAAKxC,OAAOO,OAAQD,IAEpCiB,KAAKsB,aAAaL,EAAKxC,OAAOM,IAGlC,IAAK,IAAIA,EAAI,EAAGA,EAAIkC,EAAKZ,OAAOrB,OAAQD,IAEpCiB,KAAKuB,iBAAiBN,EAAKZ,OAAOtB,IAGtC,IAAK,IAAIA,EAAI,EAAGA,EAAIkC,EAAKkC,WAAWnE,OAAQD,IAExCiB,KAAK2C,wBAAwB1B,EAAKkC,WAAWpE,IAGjDiB,KAAKqB,iBAAiBJ,EAAI,wCAGzBA,GACDjB,KAAKQ,UAAU4C,KAAKlC,KAAKmC,UAAUpC,uCAG5B/B,EAAMV,EAAOY,EAAQqD,GAC5B,IAAIa,EAAQ,CACRlC,KAAK,SACLqB,UAAWA,EACXO,SA7MD,uCAAuCO,QAAQ,QAAS,SAASC,GACpE,IAAIC,EAAqB,GAAhBC,KAAKC,SAAgB,EACpC,OADkD,MAANH,EAAYC,EAAU,EAAJA,EAAW,GAChEG,SAAS,MA4MR1E,KAAMA,EACNV,MAAOA,EACPY,OAAQA,GAGZuB,QAAQC,IAAI,gBAAiB0C,GAC7BtD,KAAKoD,KAAKE,sCAGHb,GACP,IAAIoB,EAAU,CACVzC,KAAM,QACNqB,UAAWA,GAGf9B,QAAQC,IAAI,oBAAqB6B,GACjCzC,KAAKoD,KAAKS,uCAGFb,EAAUP,GAClB,IAAIqB,EAAS,CAClB1C,KAAK,SACLqB,UAAWA,EACFO,SAAUA,GAGdrC,QAAQC,IAAI,iBAAkBkD,GAC9B9D,KAAKoD,KAAKU,qCAGJC,EAAMtB,GACZ,IAAIoB,EAAU,CACVzC,KAAK,OACL2C,KAAMA,EACftB,UAAWA,GAGN9B,QAAQC,IAAI,eAAgBiD,GAC5B7D,KAAKoD,KAAKS,8DCxLHG,mLAvDP,IAAM/C,EAAO,CAClBgD,SAAU,CACT,CACCC,MAAO,MACQjD,KAAMjB,KAAKmE,MAAMlD,KAAKmD,IAAI,SAACC,GAAO,MAAO,CAACC,EAAGD,EAAEzB,KAAM2B,EAAGF,EAAEnC,OACzEsC,YAAa,SACEC,YAAa,UACbC,MAAM,GAEV,CACXR,MAAO,MACQjD,KAAMjB,KAAKmE,MAAMlD,KAAKmD,IAAI,SAACC,GAAO,MAAO,CAACC,EAAGD,EAAEzB,KAAM2B,EAAGF,EAAEpC,OACzEuC,YAAa,SACEC,YAAa,UACbC,MAAM,KAiCxB,OADC/D,QAAQC,IAAIK,GACL0D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACtBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,OAAQ,IAAK/D,KAAMA,EAAMgE,QA7BV,CACZC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACJC,MAAO,CAAC,CACJC,aAAc,SACdC,MAAO,CAAEC,aAAa,EAAMC,aAAc,KAE9CC,MAAO,CAAC,CACJtE,KAAM,OACNkE,aAAc,SACdC,MAAO,CAAEI,OAAQ,WAGzBC,IAAK,CACDC,SAAS,EACTC,KAAM,IACNC,MAAO,GACPC,UAAW,IAEfC,KAAM,CACFJ,SAAS,EACTC,KAAM,IACNI,YAAa,gBA5CAC,IAAMC,uNCuB7BC,cACF,SAAAA,EAAYlC,GAAM,IAAAzD,EAAA,OAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,IACd3F,EAAAZ,OAAAwG,EAAA,EAAAxG,CAAAE,KAAAF,OAAAyG,EAAA,EAAAzG,CAAAuG,GAAAG,KAAAxG,KAAMmE,KACDsC,MAAQ,CACTrH,OAAQ,EACRZ,MAAO,GAJGkC,wEAQT,IAAAgG,EAAA1G,KACL,OACI2E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACEC,UAAW9E,KAAKmE,MAAMjF,KAAO,SAC7ByH,QAAS,kBAAMD,EAAKvC,MAAMyC,MAAMF,EAAKvC,MAAMjF,KAAK2H,cAAeH,EAAKD,MAAMjI,MAAOkI,EAAKD,MAAMrH,UAC3FY,KAAKmE,MAAMjF,MAEdyF,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEE,UAAU,cACViC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNC,UAAW,EACXC,MAAOnH,KAAKyG,MAAMrH,OAClBgI,KAAM,EACNC,QAAQ,EACRC,SAAU,SAACC,EAAeC,EAAGzI,GAAnB,OAAyB2H,EAAKe,SAAS,CAACrI,OAAQmI,OAE5D5C,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEE,UAAU,aACViC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNC,UAAW,EACXC,MAAOnH,KAAKyG,MAAMjI,MAClB4I,KAAM,EACNC,QAAQ,EACRC,SAAU,SAACC,EAAeC,EAAGzI,GAAnB,OAAyB2H,EAAKe,SAAS,CAACjJ,MAAO+I,eAtChDpB,IAAMC,WA6CzBsB,mLACO,IAAAC,EAAA3H,KACL,OACI2E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOC,SAAS,QAAQT,KAAK,SAASU,MAAM,SAA5C,aACAnD,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEE,UAAU,cACViC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNC,UAAW,EACXC,MAAOnH,KAAKmE,MAAM/E,OAClBgI,KAAM,EACNC,QAAQ,EACRC,SAAU,SAACC,EAAeC,EAAGzI,GAAnB,OAAyB4I,EAAKxD,MAAMmD,SAASC,cAd3CpB,IAAMC,WAoB5B2B,mLACO,IAAAC,EAAAhI,KACL,OACI2E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoD,EAAD,CAAY/I,KAAK,OAAO0H,MAAO5G,KAAKmE,MAAM+D,cAC1CvD,EAAAC,EAAAC,cAACoD,EAAD,CAAY/I,KAAK,MAAM0H,MAAO5G,KAAKmE,MAAM+D,cACzCvD,EAAAC,EAAAC,cAACsD,EAAD,CACE/I,OAAQY,KAAKmE,MAAMiE,UACnBd,SAAU,SAAClI,GAAD,OAAY4I,EAAK7D,MAAMkE,iBAAiBjJ,cARzC+G,IAAMC,WAczBkC,mLAEE,IAAM7I,EAAMO,KAAKmE,MAAM1E,IACvB,IAAKA,EACD,OAAOkF,EAAAC,EAAAC,cAAA,YAGX,IAAM0D,EAAI,IAAIC,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,gBAAiB,SAAUC,SAAU,QAAQC,OAC1G,OAAOlE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAI7E,KAAKmE,MAAM1B,YAAmBkC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAI0D,EAAE9I,EAAIA,OAAckF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAI0D,EAAE9I,EAAIjB,SAChFmG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAIpF,EAAIf,UAAiBiG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAI0D,EAAE9I,EAAIH,cAC3CqF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAIpF,EAAId,UAAiBgG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAI0D,EAAE9I,EAAIF,eAAsBoF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAIpF,EAAIb,mBAXzEuH,IAAMC,WAgBrB0C,mLAEE,IAAI7I,EAAO,KAKX,OAJID,KAAKmE,MAAMlE,OACXA,EAAOH,OAAOsC,QAAQpC,KAAKmE,MAAMlE,MAAMmE,IAAI,SAAC2E,GAAD,OAAOpE,EAAAC,EAAAC,cAACmE,EAAD,CAAQC,IAAKF,EAAE,GAAItG,UAAWsG,EAAE,GAAItJ,IAAKsJ,EAAE,QAI7FpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,CAAOuE,UAAQ,GACbxE,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,oBAAkBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,iBAAeF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,oBAC7CF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAmBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAC3BF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAmBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAAoBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAGvDF,EAAAC,EAAAC,cAAA,aACG5E,YAlBMkG,IAAMC,WA0BzBgD,mLACO,IAAAC,EAAArJ,KACCK,EAASL,KAAKmE,MAAM9D,OAAOiJ,KAAK,SAAC1E,EAAG2E,GAAJ,OAAU3E,EAAEpG,MAAQ+K,EAAE/K,QAAO4F,IAC/D,SAACd,GAAD,OACIqB,EAAAC,EAAAC,cAAA,MAAIoE,IAAK3F,EAAMN,UACX2B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAe6B,QAAS,kBAAM0C,EAAKlF,MAAML,OAAOR,EAAMN,YAAW2B,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMC,KAAK,QAAQ3B,MAAM,UAClHnD,EAAAC,EAAAC,cAAA,UAAKvB,EAAMpE,MAAUyF,EAAAC,EAAAC,cAAA,cAAMvB,EAAM9E,OAAWmG,EAAAC,EAAAC,cAAA,UAAKvB,EAAMlE,WAIjE,OACIuF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAQC,GAAG,MAAX,iBACAhF,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,CAAOuE,UAAQ,EAACS,SAAO,EAACC,OAAK,GAC3BlF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,WAAYF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBAAgBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,mBAAiBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBAEnEF,EAAAC,EAAAC,cAAA,aACGxE,YAlBK8F,IAAMC,WA0BxB0D,mLAEE,OACInF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAQC,GAAG,MAAX,UACAhF,EAAAC,EAAAC,cAACmF,EAAA,eAAD,CACE/I,KAAMjB,KAAKmE,MAAM1F,OACjBwL,YAAa,SAACC,EAAKC,GAAN,MAA+B,OAAZD,EAAIhL,KAAgB,cAAgB,kBACpEkL,WAAW,EACXpF,OAAO,OACPL,EAAAC,EAAAC,cAACmF,EAAA,kBAAD,CAAmBK,OAAK,EAACC,QAAM,EAACC,UAAU,YAA1C,YACA5F,EAAAC,EAAAC,cAACmF,EAAA,kBAAD,CAAmBQ,MAAM,MAAMD,UAAU,QAAzC,QACA5F,EAAAC,EAAAC,cAACmF,EAAA,kBAAD,CAAmBQ,MAAM,MAAMD,UAAU,QAAQE,WAAY,SAAClC,GAAD,MAAO,IAAMA,IAA1E,SACA5D,EAAAC,EAAAC,cAACmF,EAAA,kBAAD,CAAmBQ,MAAM,MAAMD,UAAU,UAAzC,UACA5F,EAAAC,EAAAC,cAACmF,EAAA,kBAAD,CAAmBO,UAAU,kBAA7B,kBAfMpE,IAAMC,WAuBxBsE,mLAEE,OAAO/F,EAAAC,EAAAC,cAAA,WAAM7E,KAAKmE,MAAM/E,eAFN+G,IAAMC,WAM1BuE,mLACO,IAAAC,EAAA5K,KACD6K,EAAa,KACbC,EAAa,KAiCjB,OAhCgC,MAA5B9K,KAAKmE,MAAMjE,UAAU+B,MAErB4I,EAAa7K,KAAKmE,MAAMjE,UAAU+B,IAAImC,IAClC,SAAC2G,GAAD,OACIpG,EAAAC,EAAAC,cAAA,MAAIoE,IAAK8B,EAAMvM,OACbmG,EAAAC,EAAAC,cAAA,UACV+F,EAAKzG,MAAM6G,SACVrG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsB6B,QAAS,kBAAMiE,EAAKzG,MAAM8G,UAAU,MAAOF,EAAMvM,SAASoM,EAAKzG,MAAMiE,WAChHzD,EAAAC,EAAAC,cAAA,aAEYF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,IACMiG,EAAMvM,OACPmG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACqG,EAAD,CAAa9L,OAAQ2L,EAAM3L,cAKlB,MAA5BY,KAAKmE,MAAMjE,UAAUgC,MAErB4I,EAAa9K,KAAKmE,MAAMjE,UAAUgC,IAAIkC,IAClC,SAAC2G,GAAD,OACIpG,EAAAC,EAAAC,cAAA,MAAIoE,IAAK8B,EAAMvM,OACbmG,EAAAC,EAAAC,cAAA,UAAKkG,EAAM3L,QAAYuF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,IAAuBiG,EAAMvM,OACpDmG,EAAAC,EAAAC,cAAA,UACZ+F,EAAKzG,MAAM6G,SACVrG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB6B,QAAS,kBAAMiE,EAAKzG,MAAM8G,UAAU,OAAQF,EAAMvM,SAASoM,EAAKzG,MAAMiE,WAChHzD,EAAAC,EAAAC,cAAA,iBAOEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,OACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,SACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,SAGJH,EAAAC,EAAAC,cAAA,aACGgG,EACAC,YAhDK3E,IAAMC,WAwDxB+E,mLACM,IAAAC,EAAApL,KACJ,OACI2E,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,KACED,EAAAC,EAAAC,cAACwG,EAAAzG,EAAK0G,MAAN,CAAYC,UAAU,YACpB5G,EAAAC,EAAAC,cAACwG,EAAAzG,EAAK4G,QAAN,CACE7B,GAAG,WACH8B,KAAK,IACLrE,KAAK,KACLhG,KAAK,OACLsK,YAAY,aACZC,IAAK,SAACA,GAAD,OAASP,EAAKrH,KAAO4H,KAC5BhH,EAAAC,EAAAC,cAAC+G,EAAAhH,EAAD,CACEwC,KAAK,KACLyE,QAAQ,UACRlF,QAAS,WACDyE,EAAKrH,KAAKoD,OACViE,EAAKjH,MAAM2H,UAAUV,EAAKrH,KAAKoD,OAEnCiE,EAAKrH,KAAKoD,MAAM,OAPtB,sBAZQhB,IAAMC,WA6BxB2F,cACF,SAAAA,EAAY5H,GAAM,IAAA6H,EAAA,OAAAlM,OAAAC,EAAA,EAAAD,CAAAE,KAAA+L,IACdC,EAAAlM,OAAAwG,EAAA,EAAAxG,CAAAE,KAAAF,OAAAyG,EAAA,EAAAzG,CAAAiM,GAAAvF,KAAAxG,KAAMmE,KACDsC,MAAQ,CACTwF,QAAQ,GAHED,wEAOT,IAAAE,EAAAlM,KACDmM,EAASxH,EAAAC,EAAAC,cAAA,qBACT7E,KAAKmE,MAAM7D,MAAMtB,OAAS,IAC1BmN,EAASnM,KAAKmE,MAAM7D,MAAM,IAG9B,IAAI8L,EAAU,KAMd,OAJIpM,KAAKmE,MAAM7D,MAAMtB,OAAS,IAC1BoN,EAAUpM,KAAKmE,MAAM7D,MAAM+L,MAAM,GAAGjI,IAAI,SAACL,GAAD,OAAUY,EAAAC,EAAAC,cAAA,OAAKoE,IAAKlF,GAAOA,MAInEY,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACApF,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAACyH,EAAA,EAAUC,MAAX,CACEN,OAAQjM,KAAKyG,MAAMwF,OACnBO,MAAO,EACP7C,GAAID,IACJ/C,QAAS,kBAAMuF,EAAKzE,SAAS,CAACwE,QAASC,EAAKzF,MAAMwF,WAClDtH,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMC,KAAK,aACV0C,GAEHxH,EAAAC,EAAAC,cAACyH,EAAA,EAAUG,QAAX,CAAmBR,QAASjM,KAAKyG,MAAMwF,QACrCG,YAhCWjG,IAAMC,WAwC3BsG,cACF,SAAAA,EAAYvI,GAAM,IAAAwI,EAAA,OAAA7M,OAAAC,EAAA,EAAAD,CAAAE,KAAA0M,IACdC,EAAA7M,OAAAwG,EAAA,EAAAxG,CAAAE,KAAAF,OAAAyG,EAAA,EAAAzG,CAAA4M,GAAAlG,KAAAxG,KAAMmE,KACDsC,MAAQ,CACTU,MAAO,GAHGwF,wEAOV,IAAAC,EAAA5M,KACE6M,EAAW,CACbC,MAAO,EACP/F,IAAK,EACLC,IAAKhH,KAAKmE,MAAMlD,KAAKjC,OACrBiI,KAAM,EACNK,SAAU,SAACyF,GAAD,OAAOH,EAAKnF,SAAS,CAACN,MAAO4F,MAE3C,OAAOpI,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACmI,EAAD,CACJ/L,KAAMjB,KAAKmE,MAAMlD,KAAKoL,MAAMrM,KAAKyG,MAAMU,OACjCP,MAAO,KAETjC,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAOC,SAAS,SAAS7H,KAAKyG,MAAMU,OACpCxC,EAAAC,EAAAC,cAACoI,EAAA,OAAD,CAAQC,UAAQ,EAACpF,MAAM,MAAM+E,SAAUA,YAtBjB1G,IAAMC,WA2BlC+G,cACF,SAAAA,EAAYhJ,GAAM,IAAAiJ,EAAA,OAAAtN,OAAAC,EAAA,EAAAD,CAAAE,KAAAmN,IACdC,EAAAtN,OAAAwG,EAAA,EAAAxG,CAAAE,KAAAF,OAAAyG,EAAA,EAAAzG,CAAAqN,GAAA3G,KAAAxG,KAAMmE,KACDsC,MAAQ,CACT2B,UAAW,GAHDgF,wEAOT,IAAAC,EAAArN,KACDP,EAAM,GACVA,EAAIO,KAAKmE,MAAM1B,WAAazC,KAAKmE,MAAMlE,KAAKD,KAAKmE,MAAM1B,WACvD,IAAMhE,EAASuB,KAAKmE,MAAM1F,OAAOuB,KAAKmE,MAAM1B,WAE5C,OACIkC,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,CAAW8D,MAAO,CAAC6E,YAAY,WAC7B5I,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,KACED,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KACED,EAAAC,EAAAC,cAAC6I,EAAD,CAAcpN,MAAON,KAAKmE,MAAM7D,QAChCqE,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAAC8I,EAAD,CACP1M,KAAMjB,KAAKmE,MAAMhE,kBACRyG,MAAO,QAKfjC,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,CAAKE,UAAU,gBACbH,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,CAAKgJ,GAAG,QACNjJ,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,KACED,EAAAC,EAAAC,cAACgJ,EAAD,CACI3F,YAAalI,KAAKmE,MAAMyC,MACxByB,iBAAkB,SAACD,GAAD,OAAeiF,EAAK5F,SAAS,CAACW,UAAWA,KAC3DA,UAAWpI,KAAKyG,MAAM2B,aAG5BzD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,CAAK8D,MAAO,CAACoF,eAAgB,WAC3BnJ,EAAAC,EAAAC,cAACkJ,EAAD,CACE7N,UAAWF,KAAKmE,MAAMjE,UACtBkI,UAAWpI,KAAKyG,MAAM2B,UAC/B4C,UAAU,EACDC,UAAW,SAAC/L,EAAMV,GAAP,OAAiB6O,EAAKlJ,MAAMyC,MAAM1H,EAAMV,EAAO6O,EAAK5G,MAAM2B,iBAK7EzD,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KAAKD,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KAASpF,EAAAC,EAAAC,cAACmJ,EAAD,CAAY/N,KAAMR,IAAMkF,EAAAC,EAAAC,cAACoJ,EAAD,CAAW5N,OAAQL,KAAKmE,MAAM9D,OAAQyD,OAAQ9D,KAAKmE,MAAML,WAC/Fa,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KAAKD,EAAAC,EAAAC,cAACqJ,EAAD,CAAWzP,OAAQA,cAhDV0H,IAAMC,WAuD9B+H,mLAEE,OACIxJ,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,CAAW8D,MAAO,CAAC6E,YAAY,WAC7B5I,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,KACED,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KACED,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAAC6I,EAAD,CAAcpN,MAAON,KAAKmE,MAAM7D,QAChCqE,EAAAC,EAAAC,cAAC8I,EAAD,CACP1M,KAAMjB,KAAKmE,MAAMhE,kBACjByG,MAAO,QAKNjC,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,KACED,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KACED,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,CAAK8D,MAAO,CAACoF,eAAgB,WAC3BnJ,EAAAC,EAAAC,cAACkJ,EAAD,CACE7N,UAAWF,KAAKmE,MAAMjE,UAClC8K,UAAU,OAKNrG,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KAAKD,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KAASpF,EAAAC,EAAAC,cAACmJ,EAAD,CAAY/N,KAAMD,KAAKmE,MAAMlE,SAC3C0E,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KACED,EAAAC,EAAAC,cAACqJ,EAAD,CAAWzP,OAAQuB,KAAKmE,MAAM1F,mBA5BjB0H,IAAMC,WAoC/BgI,mLACO,IAAAC,EAAArO,KACL,OACI2E,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,CAAW8D,MAAO,CAAC6E,YAAY,WAC7B5I,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,KACED,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KACED,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAAC6I,EAAD,CAAcpN,MAAON,KAAKmE,MAAM7D,QAChCqE,EAAAC,EAAAC,cAAC8I,EAAD,CACP1M,KAAMjB,KAAKmE,MAAMhE,kBACjByG,MAAO,QAKNjC,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,KACED,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KACED,EAAAC,EAAAC,cAACyJ,EAAD,CACExC,UAAW,SAAC/H,GAAD,OAAUsK,EAAKlK,MAAMJ,KAAKA,MACrCY,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,CAAK8D,MAAO,CAACoF,eAAgB,WAC3BnJ,EAAAC,EAAAC,cAACkJ,EAAD,CACE7N,UAAWF,KAAKmE,MAAMjE,UAClC8K,UAAU,OAKRrG,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,KACED,EAAAC,EAAAC,cAACqJ,EAAD,CAAWzP,OAAQuB,KAAKmE,MAAM1F,mBA7BnB0H,IAAMC,2DC3YpBmI,eA3CX,SAAAA,EAAYpK,GAAM,IAAAzD,EAAA,OAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAuO,IACd7N,EAAAZ,OAAAwG,EAAA,EAAAxG,CAAAE,KAAAF,OAAAyG,EAAA,EAAAzG,CAAAyO,GAAA/H,KAAAxG,KAAMmE,KACDsC,MAAQ,CACThE,UAAW,IAHD/B,wEAOT,IAAAgG,EAAA1G,KAEL,OADAW,QAAQC,IAAI,KAAMZ,KAAKmE,MAAM1B,WACD,MAAxBzC,KAAKmE,MAAM1B,UAEPkC,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAMC,UAAU,SAAS/F,MAAO,CAAC1D,OAAQ,QAAS0J,cAAc,UAC9D/J,EAAAC,EAAAC,cAAC2J,EAAA,EAAKG,OAAN,CAAajG,MAAO,CAACkG,SAAU,MAC7BjK,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAQC,GAAG,KAAK7B,MAAM,OAAO2G,UAAU,UAAvC,qBACA9J,EAAAC,EAAAC,cAACgK,GAAA,EAAD,CAAMzH,KAAK,SACTzC,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAACgK,GAAA,EAAKC,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbvD,YAAY,cACZpE,SAAU,SAACyB,GAAD,OAAOrC,EAAKe,SAAS,CAAChF,UAAWsG,EAAEmG,OAAO/H,WACtDxC,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CACIrH,MAAM,OACNiH,OAAK,EAAC3H,KAAK,QACXT,QAAS,WACHD,EAAKD,MAAMhE,WACXiE,EAAKvC,MAAMiL,MAAM1I,EAAKD,MAAMhE,aALtC,aAiBTkC,EAAAC,EAAAC,cAACwK,GAAA,EAAD,CAAUtM,MAAI,EAACuM,GAAItP,KAAKmE,MAAMoL,kBAxCzBpJ,IAAMC,0FCMpBoJ,eACF,SAAAA,EAAYrL,GAAM,IAAAzD,EAAA,OAAAZ,OAAAC,EAAA,EAAAD,CAAAE,KAAAwP,IACd9O,EAAAZ,OAAAwG,EAAA,EAAAxG,CAAAE,KAAAF,OAAAyG,EAAA,EAAAzG,CAAA0P,GAAAhJ,KAAAxG,KAAMmE,KACDsC,MAAQ,CACTgJ,cAAe,yBACflP,OAAQ,SACRkC,UAAW,KACXiN,UAAW,KACXxP,UAAW,CACPgC,IAAK,GACLD,IAAK,IAET9B,kBAAmB,GACnBE,OAAQ,GACR5B,OAAQ,GACR2B,WAAY,GACZH,KAAM,GACNK,MAAO,CACH,4CACA,uBAlBMI,mFAuBdC,QAAQC,IAAI,WACZZ,KAAK2P,mBAAqB,IAAIjQ,EAC1BM,KAAKL,OAAOiQ,KAAK5P,MACjBA,KAAKJ,QAAQgQ,KAAK5P,MAClBA,KAAK6P,eAAeD,KAAK5P,OAE7BA,KAAK2P,mBAAmBG,QAAQ9P,KAAKyG,MAAMgJ,qEAIpCzP,KAAK2P,4DAIZhP,QAAQC,IAAI,iBAAkBZ,KAAK2P,oBACnC3P,KAAKyH,SAAS,CACVgI,cAAezP,KAAKyP,cACpBlP,OAAQP,KAAK2P,mBAAmBpP,OAChCL,UAAWF,KAAK2P,mBAAmBzP,UACnCzB,OAAQuB,KAAK2P,mBAAmBlR,OAChC2B,WAAYJ,KAAK2P,mBAAmBvP,WACpCC,OAAQL,KAAK2P,mBAAmBtP,OAChCC,MAAON,KAAK2P,mBAAmBrP,MAC/BH,kBAAmBH,KAAK2P,mBAAmBxP,kBAC3CF,KAAMD,KAAK2P,mBAAmB1P,sCAI/Ba,GACHH,QAAQC,IAAI,kBAAmBE,GAC/Bd,KAAKyH,SAAS,CAACiI,WAAW,IAC1B1P,KAAK2P,mBAAmBI,WAAW,oCAG/BjP,GACJH,QAAQC,IAAI,mBAAoBE,GAChCd,KAAKyH,SAAS,CAACiI,WAAW,sCAI1B/O,QAAQC,IAAI,oBACZZ,KAAK2P,mBAAmBG,6CAGjB5Q,EAAMV,EAAOY,GACpBY,KAAK2P,mBAAmBK,WAAW9Q,EAAMV,EAAOY,EAAQY,KAAKyG,MAAMhE,+CAG3DO,GACRhD,KAAK2P,mBAAmBM,YAAYjN,EAAUhD,KAAKyG,MAAMhE,6CAGnDsB,GACN/D,KAAK2P,mBAAmB7D,UAAU/H,EAAM,kCAGtCtB,GAEF9B,QAAQC,IAAI,kBAAmB6B,GAC/BzC,KAAK2P,mBAAmBI,WAAWtN,GACnCzC,KAAKyH,SAAS,CAAChF,UAAWA,qCAGtB,IAAAiE,EAAA1G,KACJ,OACI2E,EAAAC,EAAAC,cAACqL,GAAA,EAAD,KACEvL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CAAMC,WAAS,GACbzL,EAAAC,EAAAC,cAACsL,GAAA,EAAKE,KAAN,CAAW5G,KAAMzJ,KAAKyG,MAAMhE,UAAY,SAAW,QAAS6N,KAAK,UAAS3L,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMC,KAAK,OAAO3B,MAAM,OAAOV,KAAK,WAC9GzC,EAAAC,EAAAC,cAACsL,GAAA,EAAKE,KAAN,CAAW5G,KAAK,UAAUE,GAAI4G,KAAMjB,GAAG,YAAW3K,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMC,KAAK,aAAa3B,MAAM,OAAOV,KAAK,WAC5FzC,EAAAC,EAAAC,cAACsL,GAAA,EAAKE,KAAN,CAAW5G,KAAK,QAAQE,GAAI4G,KAAMjB,GAAG,UAAS3K,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMC,KAAK,MAAM3B,MAAM,QAAQV,KAAK,WAClFzC,EAAAC,EAAAC,cAACsL,GAAA,EAAKE,KAAN,CAAW5G,KAAK,SAAS+G,SAAS,QAAQpJ,KAAK,SAC5CpH,KAAKyG,MAAMlG,QAEdoE,EAAAC,EAAAC,cAACsL,GAAA,EAAKE,KAAN,CAAW5G,KAAK,YAAY+G,SAAS,SAClCxQ,KAAKyG,MAAMhE,UAAYkC,EAAAC,EAAAC,cAAA,SAAI,UAAY7E,KAAKyG,MAAMhE,UAAY,KAAW,KAC1EkC,EAAAC,EAAAC,cAAC4L,GAAA,EAAD,CACEC,QAAS/L,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACPC,KAAK,WACL3B,MAAO9H,KAAKyG,MAAMiJ,UAAY,QAAU,MACxCtI,KAAK,UACPgF,QAASpM,KAAKyG,MAAMiJ,UAAY,wBAA0B,qBAGhE/K,EAAAC,EAAAC,cAAC8L,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA3M,GAAK,OAAIQ,EAAAC,EAAAC,cAACwK,GAAA,EAAD,CAAUtM,MAAI,EAACuM,GAAG,cACzD3K,EAAAC,EAAAC,cAAC8L,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAA3M,GAAK,OACtCQ,EAAAC,EAAAC,cAACkM,GAAD,CACE3B,MAAO1I,EAAK0I,MAAMQ,KAAKlJ,GACvBgJ,UAAWhJ,EAAKD,MAAMiJ,UACtBjN,UAAWiE,EAAKD,MAAMhE,UACtB8M,SAAU,wBACd5K,EAAAC,EAAAC,cAAC8L,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,OAAQ,SAAA3M,GAC3C,OAA4B,MAAxBuC,EAAKD,MAAMhE,UACJkC,EAAAC,EAAAC,cAACwK,GAAA,EAAD,CAAUtM,MAAI,EAACuM,GAAG,MAElB3K,EAAAC,EAAAC,cAACmM,EAAD,CACLpK,MAAOF,EAAKsJ,WAAWJ,KAAKlJ,GAC5BjE,UAAWiE,EAAKD,MAAMhE,UACtBqB,OAAQ4C,EAAKuJ,YAAYL,KAAKlJ,GAC9BxG,UAAWwG,EAAKD,MAAMvG,UACxCC,kBAAmBuG,EAAKD,MAAMtG,kBACZE,OAAQqG,EAAKD,MAAMpG,OACnB5B,OAAQiI,EAAKD,MAAMhI,OACnBwB,KAAMyG,EAAKD,MAAMxG,KACjBK,MAAOoG,EAAKD,MAAMnG,WAG1BqE,EAAAC,EAAAC,cAAC8L,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAA3M,GACnC,OAAOQ,EAAAC,EAAAC,cAACoM,EAAD,CACL/Q,UAAWwG,EAAKD,MAAMvG,UACtBC,kBAAmBuG,EAAKD,MAAMtG,kBAC9BG,MAAOoG,EAAKD,MAAMnG,MAClBL,KAAMyG,EAAKD,MAAMxG,KACjBxB,OAAQiI,EAAKD,MAAMrG,gBAEvBuE,EAAAC,EAAAC,cAAC8L,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAA3M,GAC/B,OAAOQ,EAAAC,EAAAC,cAACqM,EAAD,CACLnN,KAAM2C,EAAKoF,UAAU8D,KAAKlJ,GAC1BxG,UAAWwG,EAAKD,MAAMvG,UACtBC,kBAAmBuG,EAAKD,MAAMtG,kBAC9BG,MAAOoG,EAAKD,MAAMnG,MAClB7B,OAAQiI,EAAKD,MAAMhI,qBAjJtB0H,IAAMC,WA0JnB+K,GAAOxM,EAAAC,EAAAC,cAACuM,GAAD,MAEbC,KAASP,OAAOK,GAAMG,SAASC,eAAe","file":"static/js/main.24082c38.chunk.js","sourcesContent":["function calculate_pnl(price, trades){\n    let pnl = 0\n    let net_pos = 0\n    let tot_buy = 0\n    let tot_sell = 0\n    let tot_buy_val = 0\n    let tot_sell_val = 0\n\n    for (let i = 0; i < trades.length; i += 1){\n        const sign = trades[i].side == 'BUY' ? 1 : -1\n        const vol = trades[i].volume * sign\n        const px = trades[i].price\n        const val = vol * px\n        net_pos += vol\n\n        if (sign > 0){\n            tot_buy += vol\n            tot_buy_val += val\n        } else {\n            tot_sell += vol\n            tot_sell_val += val\n        }\n\n    }\n\n    const avg_buy_px = tot_buy_val / tot_buy\n    const avg_sell_px = tot_sell_val / tot_sell\n    const abs_tot_sell = -tot_sell\n\n    if (tot_buy == 0 && abs_tot_sell != 0){\n        pnl = abs_tot_sell * (avg_sell_px - price)\n    } else if (abs_tot_sell == 0 && tot_buy != 0){\n        pnl = tot_buy * (price - avg_buy_px)\n    } else if (tot_buy > abs_tot_sell){\n        pnl = abs_tot_sell * (avg_sell_px - avg_buy_px) + (tot_buy - abs_tot_sell) * (price - avg_buy_px)\n    } else if (tot_buy < abs_tot_sell){\n        pnl = tot_buy * (avg_sell_px - avg_buy_px) + (abs_tot_sell - tot_buy) * (avg_sell_px - price)\n    } else {\n        pnl = (avg_sell_px * abs_tot_sell) - (avg_buy_px * tot_buy)\n    }\n\n    return {\n        pnl: pnl,\n        price: price,\n        net_pos: net_pos,\n        tot_buy: tot_buy,\n        tot_sell: tot_sell,\n        avg_buy_px: avg_buy_px,\n        avg_sell_px: avg_sell_px\n    }\n}\n\nexport default calculate_pnl\n","import calculate_pnl from './pnl.js'\nimport moment from 'moment'\n\nfunction uuidv4(){\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (Math.random() * 16 | 0), v = c === 'x' ? r : ((r & 0x3) | 0x8)\n\t\treturn v.toString(16)\n\t  })\n}\n\nclass ExchangeInterface {\n    constructor(\n        onopen, \n        onclose,\n        notify\n    ){\n        this.onopen = onopen\n        this.onclose = onclose\n        this.notify = notify\n\n        this.pnls = {}\n        this.orderbook = {}\n        this.orderbook_updates = []\n        this.trades = {}\n        this.all_trades = []\n        this.orders = []\n        this.hints = []\n        this.status = 'closed'\n\n        this.websocket = null\n    }\n\n    render(){\n        return null\n    }\n\n    connect(host){\n        console.log(\"Opening connection to\", host)\n        this.websocket = new WebSocket(host)\n        this.websocket.onopen = (event) => {\n            console.log(\"WebSocket onopen\")\n            this.onopen(event)\n        }\n        this.websocket.onclose = (event) => {\n            console.log(\"WebSocket onclose\")\n            this.onclose(event)\n        }\n        this.websocket.onerror = (event) => {\n            console.log(\"WebSocket error\", event)\n        }\n        this.websocket.onmessage = (event) => {\n            console.log(\"WebSocket message\", event)\n            let data = JSON.parse(event.data)\n\n            switch (data.type) {\n                case 'orderbook':\n                    console.log(\"Got orderbook\", data)\n                    this.handle_orderbook(data)\n                    break\n                case 'trade':\n                    console.log(\"Got trade\", data)\n                    this.handle_trade(data)\n                    break\n                case 'order_ack':\n                    console.log(\"Got order\", data)\n                    this.handle_order_ack(data)\n                    break\n                case 'cancel_ack':\n                    console.log(\"Got cancel\", data)\n                    this.handle_cancel_ack(data)\n                    break\n                case 'hints':\n                    console.log(\"Got hints\", data)\n                    this.handle_hints(data)\n                    break\n                case 'sync_state':\n                    console.log(\"Got sync_state\", data)\n                    this.handle_sync_state(data)\n                    break\n                case 'status':\n                    console.log(\"Got exchange status\", data)\n                    this.handle_status(data)\n                    break\n\n                default:\n                    console.error(\"Unsupported event\", data)\n                    break\n            }\n            this.update_pnl()\n            this.notify()\n        }\n    }\n\n    update_pnl(){\n        console.log(\"START UPDATE\", new Date())\n        const ob = this.orderbook_updates[this.orderbook_updates.length - 1]\n        const midprice = (ob.ask + ob.bid) * .5\n        for (const [trader_id, trades ] of Object.entries(this.trades)){\n            this.pnls[trader_id] = calculate_pnl(midprice, trades)\n        }\n        console.log(\"END UPDATE\", new Date())\n    }\n\n    handle_status(data){\n        this.status = data.status\n    }\n\n    handle_orderbook(data){\n        this.orderbook = data\n        this.orderbook.ask = this.orderbook.ask.reverse()\n        this.handle_orderbook_update(this.orderbook)\n    }\n\n    handle_orderbook_update(data){\n        let bid = null\n        let ask = null\n        let time = moment(data.time)\n\n        if (data.bid.length !== 0){\n            bid = data.bid[0].price\n        }\n\n        if (data.ask.length !== 0){\n            ask = data.ask[data.ask.length - 1].price\n        }\n        const tick = {time: time, bid: bid, ask: ask}\n        console.log(\"Updating orderbook history: \", tick)\n\n        this.orderbook_updates.push(tick)\n    }\n\n    handle_order_ack(data){\n        this.orders.push(data)\n    }\n\n    handle_cancel_ack(data){\n        for (let i = 0; i < this.orders.length; i++){\n            if (this.orders[i].order_id === data.order_id)\n            {\n                console.log(\"Removing order: \", this.orders[i])\n                this.orders.splice(i, 1)\n                break\n            }\n        }\n    }\n\n    handle_trade(data){\n        this.all_trades.unshift(data)\n\n        if (this.trades[data.trader_id]){\n            this.trades[data.trader_id].unshift(data)\n        } else {\n            this.trades[data.trader_id] = [data]\n        }\n\n\n        if (data.trader_id == this.trader_id){\n            for (let i = 0; i < this.orders.length; i++){\n                if (this.orders[i].order_id === data.order_id)\n                {\n                    this.orders[i].volume -= data.volume\n                    if (this.orders[i].volume <= 0){\n                        console.log(\"Removing order: \", this.orders[i])\n                        this.orders.splice(i, 1)\n                    }\n                    break\n                }\n            }\n        }\n    }\n\n    handle_hints(data){\n        console.log(\"Handling hints\")\n        this.hints = data.hints\n    }\n\n    handle_sync_state(data){\n        console.log(\"Syncing state\")\n        this.handle_hints(data)\n        if (!this.trades[data.trader_id] && !data.trader_id == \"\"){\n            this.trades[data.trader_id] = []\n        }\n\n        for (let i = 0; i < data.trades.length; i++)\n        {\n            this.handle_trade(data.trades[i])\n        }\n\n        for (let i = 0; i < data.orders.length; i++)\n        {\n            this.handle_order_ack(data.orders[i])\n        }\n\n        for (let i = 0; i < data.orderbooks.length; i++)\n        {\n            this.handle_orderbook_update(data.orderbooks[i])\n        }\n\n        this.handle_orderbook(data[\"orderbook\"])\n    }\n\n    send(data){\n        this.websocket.send(JSON.stringify(data))\n    }\n\n    send_order(side, price, volume, trader_id){\n        let order = {\n            type:\"insert\", \n            trader_id: trader_id,\n            order_id: uuidv4(),\n            side: side,\n            price: price,\n            volume: volume\n        }\n\n        console.log(\"Sending order\", order)\n        this.send(order)\n    }\n\n    send_login(trader_id){\n        let message = {\n            type: \"login\",\n            trader_id: trader_id\n        }\n        \n        console.log(\"Logging in with: \", trader_id)\n        this.send(message)\n    }\n\n    send_cancel(order_id, trader_id){\n        let cancel = {\n\t\t\ttype:\"cancel\",\n\t\t\ttrader_id: trader_id, \n            order_id: order_id\n        }\n\n        console.log(\"Sending cancel\", cancel)\n        this.send(cancel)\n    }\n\n    send_hint(hint, trader_id){\n        let message = {\n            type:\"hint\",\n            hint: hint,\n\t\t\ttrader_id: trader_id\n        }\n\n        console.log(\"Sending hint\", message)\n        this.send(message)\n    }\n}\n\nexport default ExchangeInterface\n","import { Chart, Line } from 'react-chartjs-2'\n\nimport * as zoom from 'chartjs-plugin-zoom'\n\nimport moment from 'moment'\nimport React from 'react'\n\nclass OrderbookGraph extends React.Component {\n    render() {\n        const data = {\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Bid', \n                    data: this.props.data.map((d) => {return {t: d.time, y: d.bid}}),\n\t\t\t\t\tsteppedLine: 'before',\n                    borderColor: \"#00ff00\",\n                    fill: false\n                },\n                {\n\t\t\t\t\tlabel: 'Ask', \n                    data: this.props.data.map((d) => {return {t: d.time, y: d.ask}}),\n\t\t\t\t\tsteppedLine: 'before',\n                    borderColor: \"#ff0000\",\n                    fill: false\n\t\t\t\t}\n\t\t\t]\n        }\n\n        const options = {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n                yAxes: [{\n                    distribution: 'linear', \n                    ticks: { beginAtZero: true, suggestedMin: 0},\n                }],\n                xAxes: [{\n                    type: 'time',\n                    distribution: 'linear',\n                    ticks: { source: 'data'}\n                }]\n            },\n            pan: {\n                enabled: false,\n                mode: 'x',\n                speed: 10,\n                threshold: 10\n            },\n            zoom: {\n                enabled: true, \n                mode: 'x',\n                sensitivity: 0.25,\n            }\n\t\t}\n\n \t\tconsole.log(data)\n\t\treturn (<div className=\"orderbookGraph\">\n\t\t\t<Line height={300} data={data} options={options}\n            />\n            </div>\n\t\t)\n\t}\n}\n\nexport default OrderbookGraph \n","import './trader_interface.css'\n\nimport '../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css'\n\nimport OrderbookGraph from './orderbook_graph.jsx'\n\nimport AnimateOnChange from 'react-animate-on-change'\nimport NumericInput from 'react-numeric-input'\nimport NumberFormat from 'react-number-format'\n\nimport {Accordion, Icon} from 'semantic-ui-react'\nimport {Header} from 'semantic-ui-react'\nimport {Label} from 'semantic-ui-react'\nimport {Segment} from 'semantic-ui-react'\nimport {Slider} from 'react-semantic-ui-range'\n\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Collapse from 'react-bootstrap/Collapse'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table'\n\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\n\nimport React from 'react'\n\nclass QuoteInput extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            volume: 1,\n            price: 1\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"quoteInput\">\n              <button\n                className={this.props.side + \"Button\"}\n                onClick={() => this.props.trade(this.props.side.toUpperCase(), this.state.price, this.state.volume)}>\n                {this.props.side}\n              </button>\n              <NumericInput \n                className=\"volumeInput\" \n                min={1} \n                max={1000} \n                step={1} \n                precision={0} \n                value={this.state.volume}\n                size={6}\n                mobile={true}\n                onChange={(valueAsNumber, s, i) => this.setState({volume: valueAsNumber})}\n              />\n              <b>@ $</b>\n              <NumericInput \n                className=\"priceInput\" \n                min={1} \n                max={100000} \n                step={1} \n                precision={0} \n                value={this.state.price} \n                size={6}\n                mobile={true}\n                onChange={(valueAsNumber, s, i) => this.setState({price: valueAsNumber})} />\n            </div>\n        )\n        //format={(num) => \"$\" + num} \n    }\n}\n\nclass HitLimitInput extends React.Component {\n    render() {\n        return (\n            <div className=\"hitLimitInput\">\n              <Label pointing=\"right\" size=\"medium\" color='black'>Hit Limit</Label>\n              <NumericInput \n                className=\"volumeInput\" \n                min={1} \n                max={100000} \n                step={1} \n                precision={0} \n                value={this.props.volume} \n                size={6}\n                mobile={true}\n                onChange={(valueAsNumber, s, i) => this.props.onChange(valueAsNumber)} />\n            </div>\n        )\n    }\n}\n\nclass TradeInput extends React.Component {\n    render() {\n        return (\n            <div>\n              <QuoteInput side=\"sell\" trade={this.props.place_quote}/>\n              <QuoteInput side=\"buy\" trade={this.props.place_quote} />\n              <HitLimitInput \n                volume={this.props.hit_limit} \n                onChange={(volume) => this.props.hit_limit_change(volume)}/>\n            </div>\n        )\n    }\n}\n\nclass PnLRow extends React.Component {\n    render() {\n        const pnl = this.props.pnl\n        if (!pnl){\n            return <div />\n        }\n\n        const x = new Intl.NumberFormat('en-US', {style: 'currency', currencyDisplay: 'symbol', currency: 'USD'}).format\n        return <tr>\n                 <td><b>{this.props.trader_id}</b></td><td><b>{x(pnl.pnl)}</b></td><td><b>{x(pnl.price)}</b></td>\n                 <td><b>{pnl.net_pos}</b></td><td><b>{x(pnl.avg_buy_px)}</b></td>\n                 <td><b>{pnl.tot_buy}</b></td><td><b>{x(pnl.avg_sell_px)}</b></td><td><b>{pnl.tot_sell}</b></td>\n               </tr>\n    }\n}\n\nclass PnlDisplay extends React.Component {\n    render() {\n        let pnls = null\n        if (this.props.pnls){\n            pnls = Object.entries(this.props.pnls).map((e) => <PnLRow key={e[0]} trader_id={e[0]} pnl={e[1]}/>)\n        }\n\n        return (\n            <div className=\"pnlDisplay\">\n              <Table bordered>\n                <thead>\n                  <tr>\n                    <td><b>Trader</b></td><td><b>PnL</b></td><td><b>Market</b></td>\n                    <td><b>Net Pos</b></td><td><b>Avg Buy</b></td>\n                    <td><b>Tot Buy</b></td><td><b>Avg Sell</b></td><td><b>Tot Sell</b></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {pnls}\n                </tbody>\n              </Table>\n            </div>\n        )\n    }\n}\n\nclass OrderList extends React.Component {\n    render() {\n        const orders = this.props.orders.sort((a, b) => a.price < b.price).map(\n            (order) => \n                <tr key={order.order_id}>\n                    <td><button className=\"cancelButton\" onClick={() => this.props.cancel(order.order_id)}><Icon name=\"close\" color=\"red\"/></button></td>\n                  <td>{order.side}</td><td>${order.price}</td><td>{order.volume}</td>\n                </tr>\n            )\n\n        return (\n            <div className=\"orderList\">\n              <Header as='h3'>Active Orders</Header>\n              <Table bordered striped hover >\n                <thead>\n                  <tr><td><b></b></td><td><b>Side</b></td><td><b>Price</b></td><td><b>Volume</b></td></tr>\n                </thead>\n                <tbody>\n                  {orders}\n                </tbody>\n              </Table>\n            </div>\n        )\n    }\n}\n\nclass TradeList extends React.Component {\n    render() {\n        return (\n            <div className=\"tradeList\">\n              <Segment>\n                <Header as='h3'>Trades</Header>\n                <BootstrapTable \n                  data={this.props.trades}\n                  trClassName={(row, rowIndex) => row.side == \"BUY\" ? \"tableRowBuy\" : \"table-row-sell\"}\n                  exportCSV={true}\n                  height=\"400\">\n                  <TableHeaderColumn isKey hidden dataField='trade_id'>trade_id</TableHeaderColumn>\n                  <TableHeaderColumn width=\"6em\" dataField='side'>Side</TableHeaderColumn>\n                  <TableHeaderColumn width=\"6em\" dataField='price' dataFormat={(x) => \"$\" + x}>Price</TableHeaderColumn>\n                  <TableHeaderColumn width=\"6em\" dataField='volume'>Volume</TableHeaderColumn>\n                  <TableHeaderColumn dataField='counterpart_id'>With</TableHeaderColumn>\n                </BootstrapTable>\n              </Segment>\n            </div>\n           )\n    }\n}\n\nclass VolumeLevel extends React.Component {\n    render() {\n        return <div>{this.props.volume}</div>\n    }\n}\n\nclass Orderbook extends React.Component {\n    render() {\n        let ask_levels = null\n        let bid_levels = null\n        if (this.props.orderbook.ask == null){\n        } else {\n            ask_levels = this.props.orderbook.ask.map(\n                (level) => \n                    <tr key={level.price}>\n                      <td>\n\t\t\t\t  \t    {this.props.tradable ? \n\t\t\t\t  \t      <button className=\"hitButton buyButton\" onClick={() => this.props.hit_trade(\"BUY\", level.price)}>{this.props.hit_limit}</button>\n\t\t\t\t\t\t  : <div></div>}\n\t\t\t\t\t  </td>\n                      <td className=\"bold\">\n                          ${level.price}\n                      </td><td><VolumeLevel volume={level.volume}/></td>\n                    </tr>\n            )\n        }\n\n        if (this.props.orderbook.bid == null){\n        } else {\n            bid_levels = this.props.orderbook.bid.map(\n                (level) => \n                    <tr key={level.price}>\n                      <td>{level.volume}</td><td className=\"bold\">${level.price}</td>\n                      <td>\n\t\t\t\t\t    {this.props.tradable ?\n\t\t\t\t\t      <button className=\"hitButton sellButton\" onClick={() => this.props.hit_trade(\"SELL\", level.price)}>{this.props.hit_limit}</button>\n\t\t\t\t\t\t  : <div></div>}\n\t\t\t\t      </td>\n                    </tr>\n                )\n        }\n\n        return (\n            <div>\n              <table className=\"orderbookTable\">\n                <thead>\n                  <tr>\n                    <td className=\"bidHeader\">Bid</td>\n                    <td className=\"priceHeader\">Price</td>\n                    <td className=\"askHeader\">Ask</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {ask_levels}\n                  {bid_levels}\n                </tbody>\n              </table>\n            </div>\n        )\n    }\n}\n\nclass HintInput extends React.Component {\n    render(){\n        return (\n            <Form>\n              <Form.Group controlId=\"formHint\">\n                <Form.Control \n                  as=\"textarea\"\n                  rows=\"2\"\n                  size=\"lg\" \n                  type=\"text\" \n                  placeholder=\"Enter hint\" \n                  ref={(ref) => this.hint = ref}/>\n                <Button \n                  size=\"lg\" \n                  variant=\"primary\" \n                  onClick={() => {\n                      if (this.hint.value){\n                          this.props.send_hint(this.hint.value)\n                      }\n                      this.hint.value=null\n                  }}>\n                  Send Hint\n                </Button>\n              </Form.Group>\n            </Form>\n        )\n    }\n}\n\nclass HintsDisplay extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            active: false\n        }\n    }\n\n    render() {\n        let header = <b>No hints</b>\n        if (this.props.hints.length > 0){\n            header = this.props.hints[0]\n        }\n        \n        let content = null\n\n        if (this.props.hints.length > 1){\n            content = this.props.hints.slice(1).map((hint) => <div key={hint}>{hint}</div>)\n        }\n\n        return (\n            <Segment>\n            <Accordion>\n              <Accordion.Title \n                active={this.state.active} \n                index={0} \n                as={Header}\n                onClick={() => this.setState({active: !this.state.active})}>\n                <Icon name='dropdown' />\n                {header}\n              </Accordion.Title>\n              <Accordion.Content active={!this.state.active}>\n               {content}\n              </Accordion.Content>\n            </Accordion>\n            </Segment>\n        )\n    }\n}\n\nclass RangeOrderbookGraph extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            value: 0\n        }\n    }\n\n    render(){\n        const settings = {\n            start: 0,\n            min: 0, \n            max: this.props.data.length,\n            step: 5,\n            onChange: (v) => this.setState({value: v})\n        }\n        return <div>\n            <OrderbookGraph \n\t\t      data={this.props.data.slice(this.state.value)}\n              trade={[]}\n          />\n            <Label pointing=\"below\">{this.state.value}</Label>\n            <Slider discrete color=\"red\" settings={settings} />\n          </div>\n    }\n}\n\nclass TraderInterface extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            hit_limit: 1\n        }\n    }\n\n    render() {\n        let pnl = {}\n        pnl[this.props.trader_id] = this.props.pnls[this.props.trader_id]\n        const trades = this.props.trades[this.props.trader_id]\n\n        return (\n            <Container style={{'max-width':'3440px'}}>\n              <Row>\n                <Col>\n                  <HintsDisplay hints={this.props.hints}/>\n                  <Segment>\n                    <RangeOrderbookGraph \n\t\t\t          data={this.props.orderbook_updates}\n                      trade={[]}\n                    />\n                  </Segment>\n                </Col>\n              </Row>\n              <Row className=\"smallMargins\">\n                <Col md=\"auto\">\n                  <Segment>\n                    <Row>\n                      <TradeInput \n                          place_quote={this.props.trade}\n                          hit_limit_change={(hit_limit) => this.setState({hit_limit: hit_limit})}\n                          hit_limit={this.state.hit_limit}\n                      />\n                    </Row>\n                    <hr />\n                    <Row style={{justifyContent: 'center'}}>\n                      <Orderbook \n                        orderbook={this.props.orderbook}\n                        hit_limit={this.state.hit_limit}\n\t\t\t            tradable={true}\n                        hit_trade={(side, price) => this.props.trade(side, price, this.state.hit_limit)}\n                      />\n                    </Row>\n                  </Segment>\n                </Col>\n                <Col><Segment><PnlDisplay pnls={pnl}/><OrderList orders={this.props.orders} cancel={this.props.cancel}/></Segment></Col>\n                <Col><TradeList trades={trades} /></Col>\n              </Row>\n            </Container>\n        )\n    }\n}\n\nclass MonitorInterface extends React.Component {\n    render() {\n        return (\n            <Container style={{'max-width':'3440px'}}>\n              <Row>\n                <Col>\n                  <Segment>\n                    <HintsDisplay hints={this.props.hints}/> \n                    <RangeOrderbookGraph \n\t\t\t          data={this.props.orderbook_updates}\n\t\t\t          trade={[]}\n                    />\n                  </Segment>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Segment>\n                    <Row style={{justifyContent: 'center'}}>\n                      <Orderbook \n                        orderbook={this.props.orderbook}\n\t\t\t\t        tradable={false}\n                      />\n                    </Row>\n                  </Segment>\n                </Col>\n                <Col><Segment><PnlDisplay pnls={this.props.pnls}/></Segment></Col>\n                <Col>\n                  <TradeList trades={this.props.trades} />\n                </Col>\n              </Row>\n            </Container>\n        )\n    }\n}\n\nclass AdminInterface extends React.Component {\n    render() {\n        return (\n            <Container style={{'max-width':'3440px'}}>\n              <Row>\n                <Col>\n                  <Segment>\n                    <HintsDisplay hints={this.props.hints}/> \n                    <RangeOrderbookGraph \n\t\t\t          data={this.props.orderbook_updates}\n\t\t\t          trade={[]}\n                    />\n                  </Segment>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <HintInput \n                    send_hint={(hint) => this.props.hint(hint)}/>\n                    <Segment>\n                      <Row style={{justifyContent: 'center'}}>\n                        <Orderbook \n                          orderbook={this.props.orderbook}\n\t\t\t\t          tradable={false}\n                        />\n                      </Row>\n                    </Segment>\n                  </Col>\n                <Col>\n                  <TradeList trades={this.props.trades} />\n                </Col>\n              </Row>\n            </Container>\n        )\n    }\n}\n\nexport {TraderInterface, MonitorInterface, AdminInterface}\n","import './login_page.css';\n\nimport {Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react'\n\nimport { Redirect } from 'react-router';\n\nimport React from 'react';\n\n\n//ref={(ref) => this.trader_id = ref}/>\nclass Login extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            trader_id: \"\"\n        }\n    }\n\n    render() {\n        console.log(\"id\", this.props.trader_id)\n        if (this.props.trader_id == null) {\n            return (\n                <Grid textAlign='center' style={{height: '100%'}} verticalAlign='middle'>\n                  <Grid.Column style={{maxWidth: 450}}>\n                    <Header as='h2' color='blue' textAlign='center'>Login to exchange</Header>\n                    <Form size='large'>\n                      <Segment>\n                        <Form.Input \n                          fluid \n                          icon='user'\n                          iconPosition='left' \n                          placeholder='Enter login' \n                          onChange={(e) => this.setState({trader_id: e.target.value})}/>\n                        <Button \n                            color='blue' \n                            fluid size='large'\n                            onClick={() => {\n                              if (this.state.trader_id){\n                                  this.props.login(this.state.trader_id)\n                              }\n                            }}>\n                          Login\n                        </Button>\n                      </Segment>\n                    </Form>\n                  </Grid.Column>\n                </Grid>\n            )\n        }\n\n        return <Redirect push to={this.props.redirect} />\n    }\n}\n\nexport default Login\n","import ExchangeInterface from './exchange_interface.js';\nimport {TraderInterface, MonitorInterface, AdminInterface} from './trader_interface.jsx';\nimport Login from './login_page.js';\nimport './index.css';\n\nimport {Menu, Icon} from 'semantic-ui-react'\nimport {Popup} from 'semantic-ui-react'\nimport {Divider} from 'semantic-ui-react'\n\nimport { Redirect } from 'react-router';\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass Root extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            exchange_host: \"ws://le-chateaud:6789/\",\n            status: 'closed',\n            trader_id: null,\n            connected: null, \n            orderbook: {\n                bid: [],\n                ask: []\n            },\n            orderbook_updates: [],\n            orders: [],\n            trades: {},\n            all_trades: [],\n            pnls: {},\n            hints: [\n                \"Depth of all the world's oceans in meters\",\n                \"There are 7 oceans\"]\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"Mounted\")\n        this.exchange_interface = new ExchangeInterface(\n            this.onopen.bind(this),\n            this.onclose.bind(this),\n            this.exchange_event.bind(this))\n\n        this.exchange_interface.connect(this.state.exchange_host)\n    }\n\n    componentWillUnmount() {\n        delete this.exchange_interface\n    }\n\n    exchange_event(){\n        console.log(\"Updating state\", this.exchange_interface)\n        this.setState({\n            exchange_host: this.exchange_host,\n            status: this.exchange_interface.status,\n            orderbook: this.exchange_interface.orderbook,\n            trades: this.exchange_interface.trades,\n            all_trades: this.exchange_interface.all_trades,\n            orders: this.exchange_interface.orders,\n            hints: this.exchange_interface.hints,\n            orderbook_updates: this.exchange_interface.orderbook_updates,\n            pnls: this.exchange_interface.pnls\n        })\n    }\n\n    onopen(event){\n        console.log(\"Received onopen\", event);\n        this.setState({connected: true})\n        this.exchange_interface.send_login(\"\")\n    }\n\n    onclose(event){\n        console.log(\"Received onclose\", event);\n        this.setState({connected: false})\n    }\n\n    connect(){\n        console.log(\"About to connect\");\n        this.exchange_interface.connect()\n    }\n\n    send_order(side, price, volume){\n        this.exchange_interface.send_order(side, price, volume, this.state.trader_id) \n    }\n\n    send_cancel(order_id){\n        this.exchange_interface.send_cancel(order_id, this.state.trader_id)\n    }\n\n    send_hint(hint){\n        this.exchange_interface.send_hint(hint, \"\")\n    }\n\n    login(trader_id)\n    {\n        console.log(\"Logging in as: \", trader_id)\n        this.exchange_interface.send_login(trader_id)\n        this.setState({trader_id: trader_id})\n    }\n\n    render(){\n        return (\n            <Router>\n              <div>\n                <Menu stackable>\n                  <Menu.Item name={this.state.trader_id ? \"Logout\" : \"Login\"} href=\"/login\"><Icon name=\"user\" color=\"blue\" size=\"large\"/></Menu.Item>\n                  <Menu.Item name=\"Monitor\" as={Link} to=\"/monitor\"><Icon name=\"chart line\" color=\"blue\" size=\"large\"/></Menu.Item>\n                  <Menu.Item name=\"Admin\" as={Link} to=\"/admin\"><Icon name=\"spy\" color=\"black\" size=\"large\"/></Menu.Item>\n                  <Menu.Item name=\"Status\" position=\"right\" size=\"large\">\n                    {this.state.status}\n                  </Menu.Item>\n                  <Menu.Item name=\"Connected\" position=\"right\">\n                    {this.state.trader_id ? <b>{\"Trader:\" + this.state.trader_id + \" \"}</b> : null}\n                    <Popup \n                      trigger={<Icon\n                        name=\"exchange\" \n                        color={this.state.connected ? \"green\" : \"red\"}\n                        size=\"large\"/>} \n                      content={this.state.connected ? \"Connected to exchange\" : \"Not connected!\"}/>\n                  </Menu.Item>\n                </Menu>\n                <Route exact path=\"/\" render={props => <Redirect push to=\"/login\"/>}/>\n                <Route exact path=\"/login\" render={props => \n                  <Login \n                    login={this.login.bind(this)}\n                    connected={this.state.connected}\n                    trader_id={this.state.trader_id}\n                    redirect={\"/TraderInterface\"}/>} />\n                <Route exact path=\"/TraderInterface\" render={props => {\n                  if (this.state.trader_id == null){\n                      return <Redirect push to=\"/\" />\n                  } else {\n                      return <TraderInterface\n                        trade={this.send_order.bind(this)}\n                        trader_id={this.state.trader_id}\n                        cancel={this.send_cancel.bind(this)}\n                        orderbook={this.state.orderbook}\n\t\t\t\t\t\torderbook_updates={this.state.orderbook_updates}\n                        orders={this.state.orders}\n                        trades={this.state.trades}\n                        pnls={this.state.pnls}\n                        hints={this.state.hints}/>\n                  }}}\n                />\n                <Route exact path=\"/monitor\" render={props => {\n                  return <MonitorInterface\n                    orderbook={this.state.orderbook}\n                    orderbook_updates={this.state.orderbook_updates}\n                    hints={this.state.hints}\n                    pnls={this.state.pnls}\n                    trades={this.state.all_trades}/>}}\n                />\n                <Route exact path=\"/admin\" render={props => {\n                    return <AdminInterface\n                      hint={this.send_hint.bind(this)}\n                      orderbook={this.state.orderbook}\n                      orderbook_updates={this.state.orderbook_updates}\n                      hints={this.state.hints}\n                      trades={this.state.trades}/>\n                }}\n                />\n              </div>\n            </Router>\n        )\n    }\n}\n\nconst root = <Root/>\n\nReactDOM.render(root, document.getElementById('root'))\n"],"sourceRoot":""}